(assume h1 (= (g c) d))
(assume h2 (= d a))
(assume h3 (not (= (f a b) (f (g c) b))))
(step t4 (cl (not (= (g c) a)) (not (= b b)) (= (f a b) (f (g c) b))) :rule eq_congruent)
(step t5 (cl (not (= (g c) d)) (not (= d a)) (= (g c) a)) :rule eq_transitive)
(step t6 (cl (not (= b b)) (= (f a b) (f (g c) b)) (not (= (g c) d)) (not (= d a))) :rule th_resolution :premises (t4 t5))
(step t7 (cl (= b b)) :rule eq_reflexive)
(step t8 (cl (= (f a b) (f (g c) b)) (not (= (g c) d)) (not (= d a))) :rule th_resolution :premises (t6 t7))
(step t9 (cl) :rule resolution :premises (t8 h1 h2 h3))
