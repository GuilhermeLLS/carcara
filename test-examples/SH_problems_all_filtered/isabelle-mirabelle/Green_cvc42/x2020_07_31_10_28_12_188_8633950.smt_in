; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=20
(set-option :produce-proofs true)
(set-logic AUFLIRA)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort Real_set$ 0)
(declare-sort A_real_fun$ 0)
(declare-sort Real_a_fun$ 0)
(declare-sort Real_real_fun$ 0)
(declare-fun a$ () Real)
(declare-fun b$ () Real)
(declare-fun c$ () Real)
(declare-fun d$ () Real)
(declare-fun f$ () Real_a_fun$)
(declare-fun g$ () Real_real_fun$)
(declare-fun uu$ (Real_real_fun$ A_real_fun$) A_real_fun$)
(declare-fun uua$ (Real_a_fun$ A_real_fun$) A_a_fun$)
(declare-fun uub$ (A_a_fun$ A_a_fun$) A_a_fun$)
(declare-fun uuc$ (A_real_fun$ A_a_fun$) A_real_fun$)
(declare-fun uud$ (A_real_fun$ Real_a_fun$) Real_real_fun$)
(declare-fun uue$ (A_a_fun$ Real_a_fun$) Real_a_fun$)
(declare-fun uuf$ (Real_real_fun$ Real_real_fun$) Real_real_fun$)
(declare-fun uug$ (Real_a_fun$ Real_real_fun$) Real_a_fun$)
(declare-fun uuh$ (Real_real_fun$ Real) Real_real_fun$)
(declare-fun uui$ (Real_a_fun$ Real) Real_a_fun$)
(declare-fun uuj$ () Real_a_fun$)
(declare-fun image$ (A_real_fun$ A_set$) Real_set$)
(declare-fun image$a (A_a_fun$ A_set$) A_set$)
(declare-fun image$b (Real_a_fun$ Real_set$) A_set$)
(declare-fun image$c (Real_real_fun$ Real_set$) Real_set$)
(declare-fun member$ (A$ A_set$) Bool)
(declare-fun fun_app$ (Real_a_fun$ Real) A$)
(declare-fun less_eq$ (Real_set$ Real_set$) Bool)
(declare-fun member$a (Real Real_set$) Bool)
(declare-fun fun_app$a (Real_real_fun$ Real) Real)
(declare-fun fun_app$b (A_real_fun$ A$) Real)
(declare-fun fun_app$c (A_a_fun$ A$) A$)
(declare-fun integral$ (Real_set$ Real_a_fun$) A$)
(declare-fun less_eq$a (A_set$ A_set$) Bool)
(declare-fun integral$a (Real_set$ Real_real_fun$) Real)
(declare-fun atLeastAtMost$ (Real Real) Real_set$)
(declare-fun continuous_on$ (Real_set$ Real_real_fun$) Bool)
(declare-fun integrable_on$ (Real_a_fun$ Real_set$) Bool)
(declare-fun continuous_on$a (A_set$ A_real_fun$) Bool)
(declare-fun continuous_on$b (Real_set$ Real_a_fun$) Bool)
(declare-fun continuous_on$c (A_set$ A_a_fun$) Bool)
(declare-fun integrable_on$a (Real_real_fun$ Real_set$) Bool)
(assert (! (forall ((?v0 Real)) (! (= (fun_app$ uuj$ ?v0) (integral$ (atLeastAtMost$ c$ (fun_app$a g$ ?v0)) f$)) :pattern ((fun_app$ uuj$ ?v0)))) :named a0))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real)) (! (= (fun_app$a (uuh$ ?v0 ?v1) ?v2) (integral$a (atLeastAtMost$ ?v1 ?v2) ?v0)) :pattern ((fun_app$a (uuh$ ?v0 ?v1) ?v2)))) :named a1))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real) (?v2 Real)) (! (= (fun_app$ (uui$ ?v0 ?v1) ?v2) (integral$ (atLeastAtMost$ ?v1 ?v2) ?v0)) :pattern ((fun_app$ (uui$ ?v0 ?v1) ?v2)))) :named a2))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real)) (! (= (fun_app$a (uuf$ ?v0 ?v1) ?v2) (fun_app$a ?v0 (fun_app$a ?v1 ?v2))) :pattern ((fun_app$a (uuf$ ?v0 ?v1) ?v2)))) :named a3))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 A_real_fun$) (?v2 A$)) (! (= (fun_app$b (uu$ ?v0 ?v1) ?v2) (fun_app$a ?v0 (fun_app$b ?v1 ?v2))) :pattern ((fun_app$b (uu$ ?v0 ?v1) ?v2)))) :named a4))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_real_fun$) (?v2 Real)) (! (= (fun_app$ (uug$ ?v0 ?v1) ?v2) (fun_app$ ?v0 (fun_app$a ?v1 ?v2))) :pattern ((fun_app$ (uug$ ?v0 ?v1) ?v2)))) :named a5))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 A_real_fun$) (?v2 A$)) (! (= (fun_app$c (uua$ ?v0 ?v1) ?v2) (fun_app$ ?v0 (fun_app$b ?v1 ?v2))) :pattern ((fun_app$c (uua$ ?v0 ?v1) ?v2)))) :named a6))
(assert (! (forall ((?v0 A_real_fun$) (?v1 Real_a_fun$) (?v2 Real)) (! (= (fun_app$a (uud$ ?v0 ?v1) ?v2) (fun_app$b ?v0 (fun_app$ ?v1 ?v2))) :pattern ((fun_app$a (uud$ ?v0 ?v1) ?v2)))) :named a7))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$b (uuc$ ?v0 ?v1) ?v2) (fun_app$b ?v0 (fun_app$c ?v1 ?v2))) :pattern ((fun_app$b (uuc$ ?v0 ?v1) ?v2)))) :named a8))
(assert (! (forall ((?v0 A_a_fun$) (?v1 Real_a_fun$) (?v2 Real)) (! (= (fun_app$ (uue$ ?v0 ?v1) ?v2) (fun_app$c ?v0 (fun_app$ ?v1 ?v2))) :pattern ((fun_app$ (uue$ ?v0 ?v1) ?v2)))) :named a9))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$c (uub$ ?v0 ?v1) ?v2) (fun_app$c ?v0 (fun_app$c ?v1 ?v2))) :pattern ((fun_app$c (uub$ ?v0 ?v1) ?v2)))) :named a10))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_real_fun$) (?v2 A_set$) (?v3 A_real_fun$)) (=> (and (continuous_on$ ?v0 ?v1) (and (continuous_on$a ?v2 ?v3) (less_eq$ (image$ ?v3 ?v2) ?v0))) (continuous_on$a ?v2 (uu$ ?v1 ?v3)))) :named a11))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_a_fun$) (?v2 A_set$) (?v3 A_real_fun$)) (=> (and (continuous_on$b ?v0 ?v1) (and (continuous_on$a ?v2 ?v3) (less_eq$ (image$ ?v3 ?v2) ?v0))) (continuous_on$c ?v2 (uua$ ?v1 ?v3)))) :named a12))
(assert (! (forall ((?v0 A_set$) (?v1 A_a_fun$) (?v2 A_set$) (?v3 A_a_fun$)) (=> (and (continuous_on$c ?v0 ?v1) (and (continuous_on$c ?v2 ?v3) (less_eq$a (image$a ?v3 ?v2) ?v0))) (continuous_on$c ?v2 (uub$ ?v1 ?v3)))) :named a13))
(assert (! (forall ((?v0 A_set$) (?v1 A_real_fun$) (?v2 A_set$) (?v3 A_a_fun$)) (=> (and (continuous_on$a ?v0 ?v1) (and (continuous_on$c ?v2 ?v3) (less_eq$a (image$a ?v3 ?v2) ?v0))) (continuous_on$a ?v2 (uuc$ ?v1 ?v3)))) :named a14))
(assert (! (forall ((?v0 A_set$) (?v1 A_real_fun$) (?v2 Real_set$) (?v3 Real_a_fun$)) (=> (and (continuous_on$a ?v0 ?v1) (and (continuous_on$b ?v2 ?v3) (less_eq$a (image$b ?v3 ?v2) ?v0))) (continuous_on$ ?v2 (uud$ ?v1 ?v3)))) :named a15))
(assert (! (forall ((?v0 A_set$) (?v1 A_a_fun$) (?v2 Real_set$) (?v3 Real_a_fun$)) (=> (and (continuous_on$c ?v0 ?v1) (and (continuous_on$b ?v2 ?v3) (less_eq$a (image$b ?v3 ?v2) ?v0))) (continuous_on$b ?v2 (uue$ ?v1 ?v3)))) :named a16))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_real_fun$) (?v2 Real_set$) (?v3 Real_real_fun$)) (=> (and (continuous_on$ ?v0 ?v1) (and (continuous_on$ ?v2 ?v3) (less_eq$ (image$c ?v3 ?v2) ?v0))) (continuous_on$ ?v2 (uuf$ ?v1 ?v3)))) :named a17))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_a_fun$) (?v2 Real_set$) (?v3 Real_real_fun$)) (=> (and (continuous_on$b ?v0 ?v1) (and (continuous_on$ ?v2 ?v3) (less_eq$ (image$c ?v3 ?v2) ?v0))) (continuous_on$b ?v2 (uug$ ?v1 ?v3)))) :named a18))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_a_fun$) (?v3 A_a_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 A$)) (=> (member$ ?v4 ?v1) (= (fun_app$c ?v2 ?v4) (fun_app$c ?v3 ?v4))))) (= (continuous_on$c ?v0 ?v2) (continuous_on$c ?v1 ?v3)))) :named a19))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_real_fun$) (?v3 A_real_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 A$)) (=> (member$ ?v4 ?v1) (= (fun_app$b ?v2 ?v4) (fun_app$b ?v3 ?v4))))) (= (continuous_on$a ?v0 ?v2) (continuous_on$a ?v1 ?v3)))) :named a20))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set$) (?v2 Real_real_fun$) (?v3 Real_real_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 Real)) (=> (member$a ?v4 ?v1) (= (fun_app$a ?v2 ?v4) (fun_app$a ?v3 ?v4))))) (= (continuous_on$ ?v0 ?v2) (continuous_on$ ?v1 ?v3)))) :named a21))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set$) (?v2 Real_a_fun$) (?v3 Real_a_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 Real)) (=> (member$a ?v4 ?v1) (= (fun_app$ ?v2 ?v4) (fun_app$ ?v3 ?v4))))) (= (continuous_on$b ?v0 ?v2) (continuous_on$b ?v1 ?v3)))) :named a22))
(assert (! (integrable_on$ f$ (atLeastAtMost$ c$ d$)) :named a23))
(assert (! (continuous_on$ (atLeastAtMost$ a$ b$) g$) :named a24))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real)) (=> (integrable_on$a ?v0 (atLeastAtMost$ ?v1 ?v2)) (continuous_on$ (atLeastAtMost$ ?v1 ?v2) (uuh$ ?v0 ?v1)))) :named a25))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real) (?v2 Real)) (=> (integrable_on$ ?v0 (atLeastAtMost$ ?v1 ?v2)) (continuous_on$b (atLeastAtMost$ ?v1 ?v2) (uui$ ?v0 ?v1)))) :named a26))
(assert (! (less_eq$ (image$c g$ (atLeastAtMost$ a$ b$)) (atLeastAtMost$ c$ d$)) :named a27))
(assert (! (not (continuous_on$b (atLeastAtMost$ a$ b$) uuj$)) :named a28))
(check-sat)
;;;;(get-proof)
