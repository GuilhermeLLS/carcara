; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --multi-trigger-linear --no-statistics --random-seed=1 --lang=smt2 --continued-execution --tlimit 30000
(set-option :produce-unsat-cores true)
(set-logic AUFLIA)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort E$ 0)
(declare-sort A_set$ 0)
(declare-sort B_set$ 0)
(declare-sort B_e_fun$ 0)
(declare-sort A_b_prod$ 0)
(declare-sort B_measure$ 0)
(declare-fun a$ () A_set$)
(declare-fun b$ () B_set$)
(declare-fun f$ (A_b_prod$) E$)
(declare-fun x$ () A$)
(declare-fun m2$ () B_measure$)
(declare-fun uu$ () B_e_fun$)
(declare-fun pair$ (A$ B$) A_b_prod$)
(declare-fun member$ (A$ A_set$) Bool)
(declare-fun fun_app$ (B_e_fun$ B$) E$)
(declare-fun set_integrable$ (B_measure$ B_set$ B_e_fun$) Bool)
(assert (! (forall ((?v0 B$)) (! (= (fun_app$ uu$ ?v0) (f$ (pair$ x$ ?v0))) :pattern ((fun_app$ uu$ ?v0)))) :named a0))
(assert (! (not (set_integrable$ m2$ b$ uu$)) :named a1))
(assert (! (member$ x$ a$) :named a2))
(assert (! (=> (member$ x$ a$) (set_integrable$ m2$ b$ uu$)) :named a3))
(check-sat)
(get-unsat-core)
