; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --multi-trigger-linear --no-statistics --random-seed=1 --lang=smt2 --continued-execution --tlimit 30000
(set-option :produce-unsat-cores true)
(set-logic AUFLIA)
(declare-sort S$ 0)
(declare-sort Nat$ 0)
(declare-sort S_nat_fun$ 0)
(declare-sort S_enat_fun$ 0)
(declare-sort S_v_tm_list$ 0)
(declare-sort V_s_set_fun$ 0)
(declare-sort S_s_bool_fun_fun$ 0)
(declare-sort S_v_tm_list_bool_fun$ 0)
(declare-sort S_v_tm_s_v_tm_bool_fun_fun$ 0)
(declare-sort S_v_tm_list_s_v_tm_list_bool_fun_fun$ 0)
(declare-sort S_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun$ 0)
(declare-sort S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun$ 0)
(declare-fun f$ () S$)
(declare-fun gt$ (V_s_set_fun$ S_s_bool_fun_fun$ Nat$ S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun$ S_enat_fun$ S_nat_fun$) S_v_tm_s_v_tm_bool_fun_fun$)
(declare-fun nil$ () S_v_tm_list$)
(declare-fun extf$ () S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun$)
(declare-fun delta$ () Nat$)
(declare-fun gt_sym$ () S_s_bool_fun_fun$)
(declare-fun wt_sym$ () S_nat_fun$)
(declare-fun fun_app$ (S_v_tm_list_bool_fun$ S_v_tm_list$) Bool)
(declare-fun fun_app$a (S_v_tm_list_s_v_tm_list_bool_fun_fun$ S_v_tm_list$) S_v_tm_list_bool_fun$)
(declare-fun fun_app$b (S_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun$ S_v_tm_s_v_tm_bool_fun_fun$) S_v_tm_list_s_v_tm_list_bool_fun_fun$)
(declare-fun fun_app$c (S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun$ S$) S_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun$)
(declare-fun arity_sym$ () S_enat_fun$)
(declare-fun ground_heads_var$ () V_s_set_fun$)
(assert (! (not false) :named a0))
(assert (! (not (fun_app$ (fun_app$a (fun_app$b (fun_app$c extf$ f$) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$)) nil$) nil$)) :named a1))
(assert (! (fun_app$ (fun_app$a (fun_app$b (fun_app$c extf$ f$) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$)) nil$) nil$) :named a2))
(check-sat)
(get-unsat-core)
