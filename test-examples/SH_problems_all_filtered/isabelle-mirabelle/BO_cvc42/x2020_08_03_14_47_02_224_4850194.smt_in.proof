(assume a2 (not (less_eq$ (zHMSet$ (zmset_of$ (hmsetmset$ (of_nat$ epsilon$)))) (eval_tpoly$ a$ (map_tpoly$ uu$ uua$ (wt$ ground_heads_var$ delta$ arity_sym$ wt_sym$ coef_sym$ (apps$ (hd$ zeta$) ss$)))))))
(assume a3 (=> (= ss$ nil$) (less_eq$ (zHMSet$ (zmset_of$ (hmsetmset$ (of_nat$ epsilon$)))) (eval_tpoly$ a$ (map_tpoly$ uu$ uua$ (wt$ ground_heads_var$ delta$ arity_sym$ wt_sym$ coef_sym$ (apps$ (hd$ zeta$) ss$)))))))
(assume a4 (=> (not (= ss$ nil$)) (less_eq$ (zHMSet$ (zmset_of$ (hmsetmset$ (of_nat$ epsilon$)))) (eval_tpoly$ a$ (map_tpoly$ uu$ uua$ (wt$ ground_heads_var$ delta$ arity_sym$ wt_sym$ coef_sym$ (apps$ (hd$ zeta$) ss$)))))))
(step t4 (cl (not (= ss$ nil$)) (less_eq$ (zHMSet$ (zmset_of$ (hmsetmset$ (of_nat$ epsilon$)))) (eval_tpoly$ a$ (map_tpoly$ uu$ uua$ (wt$ ground_heads_var$ delta$ arity_sym$ wt_sym$ coef_sym$ (apps$ (hd$ zeta$) ss$)))))) :rule implies :premises (a3))
(step t5 (cl (not (= ss$ nil$))) :rule resolution :premises (t4 a2))
(step t6 (cl (not (not (= ss$ nil$))) (less_eq$ (zHMSet$ (zmset_of$ (hmsetmset$ (of_nat$ epsilon$)))) (eval_tpoly$ a$ (map_tpoly$ uu$ uua$ (wt$ ground_heads_var$ delta$ arity_sym$ wt_sym$ coef_sym$ (apps$ (hd$ zeta$) ss$)))))) :rule implies :premises (a4))
(step t7 (cl (not (not (not (= ss$ nil$)))) (= ss$ nil$)) :rule not_not)
(step t8 (cl (= ss$ nil$) (less_eq$ (zHMSet$ (zmset_of$ (hmsetmset$ (of_nat$ epsilon$)))) (eval_tpoly$ a$ (map_tpoly$ uu$ uua$ (wt$ ground_heads_var$ delta$ arity_sym$ wt_sym$ coef_sym$ (apps$ (hd$ zeta$) ss$)))))) :rule th_resolution :premises (t7 t6))
(step t9 (cl) :rule resolution :premises (t8 a2 t5))
