; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort B_a_fun$ 0)
(declare-fun c$ () Bool)
(declare-fun f$ () B_a_fun$)
(declare-fun g$ () B_a_fun$)
(declare-fun x$ () B$)
(declare-fun fun_app$ (B_a_fun$ B$) A$)
(assert (! (not (= (fun_app$ (ite c$ f$ g$) x$) (ite c$ (fun_app$ f$ x$) (fun_app$ g$ x$)))) :named a0))
(check-sat)
;;;;;;(get-proof)
