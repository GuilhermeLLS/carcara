; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A$ 0)
(declare-sort A_a_a_fun_fun$ 0)
(declare-sort B_a_fun_b_set_a_fun_fun$ 0)
(declare-fun f$ (A_a_a_fun_fun$ A$) B_a_fun_b_set_a_fun_fun$)
(declare-fun one$ () A$)
(declare-fun prod$ (A_a_a_fun_fun$ A$) B_a_fun_b_set_a_fun_fun$)
(declare-fun times$ () A_a_a_fun_fun$)
(assert (! (not (= (f$ times$ one$) (prod$ times$ one$))) :named a0))
(assert (! (= (prod$ times$ one$) (f$ times$ one$)) :named a1))
(check-sat)
;;;;;;(get-proof)
