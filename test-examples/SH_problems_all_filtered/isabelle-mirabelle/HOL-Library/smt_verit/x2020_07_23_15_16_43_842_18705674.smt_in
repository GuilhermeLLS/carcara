; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIRA)
(declare-sort Nat$ 0)
(declare-sort Nat_filter$ 0)
(declare-sort Real_filter$ 0)
(declare-sort Nat_real_fun$ 0)
(declare-fun f$ (Nat$) Real)
(declare-fun g$ (Nat$) Real)
(declare-fun h$ () Nat_real_fun$)
(declare-fun uu$ () Nat_real_fun$)
(declare-fun nhds$ (Real) Real_filter$)
(declare-fun at_top$ () Nat_filter$)
(declare-fun fun_app$ (Nat_real_fun$ Nat$) Real)
(declare-fun filterlim$ (Nat_real_fun$ Real_filter$ Nat_filter$) Bool)
(assert (! (forall ((?v0 Nat$)) (! (= (fun_app$ uu$ ?v0) (- (f$ ?v0) (g$ ?v0))) :pattern ((fun_app$ uu$ ?v0)))) :named a0))
(assert (! (not (filterlim$ uu$ (nhds$ 0.0) at_top$)) :named a1))
(assert (! (filterlim$ h$ (nhds$ 0.0) at_top$) :named a2))
(assert (! (filterlim$ uu$ (nhds$ 0.0) at_top$) :named a3))
(check-sat)
;;;;;;(get-proof)
