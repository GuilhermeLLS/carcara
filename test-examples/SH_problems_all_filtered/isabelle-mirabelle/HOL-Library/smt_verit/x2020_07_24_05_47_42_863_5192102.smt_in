; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort A_b_prod$ 0)
(declare-fun z$ () A_b_prod$)
(declare-fun fst$ (A_b_prod$) A$)
(declare-fun snd$ (A_b_prod$) B$)
(declare-fun pair$ (A$ B$) A_b_prod$)
(declare-fun thesis$ () Bool)
(assert (! (not thesis$) :named a0))
(assert (! (forall ((?v0 A$) (?v1 B$)) (=> (= z$ (pair$ ?v0 ?v1)) thesis$)) :named a1))
(assert (! (forall ((?v0 A$) (?v1 B$) (?v2 A$) (?v3 B$)) (=> (and (= (pair$ ?v0 ?v1) (pair$ ?v2 ?v3)) (=> (and (= ?v0 ?v2) (= ?v1 ?v3)) false)) false)) :named a2))
(assert (! (forall ((?v0 A_b_prod$)) (=> (forall ((?v1 A$) (?v2 B$)) (=> (= ?v0 (pair$ ?v1 ?v2)) false)) false)) :named a3))
(assert (! (forall ((?v0 A_b_prod$)) (=> (=> (= ?v0 (pair$ (fst$ ?v0) (snd$ ?v0))) false) false)) :named a4))
(check-sat)
;;;;;;(get-proof)
