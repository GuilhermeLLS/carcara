(assume a1 (not (= (card$ top$) (power$ (card$a top$a) (card$b top$b)))))
(assume a2 (= (card$a top$a) (size$ bs$)))
(assume a3 (= (card$b top$b) (size$a as$)))
(assume a4 (= (card$ (set$ (map$ uu$ (n_lists$ (size$a as$) bs$)))) (size$b (map$ uu$ (n_lists$ (size$a as$) bs$)))))
(assume a5 (= (size$b (map$ uu$ (n_lists$ (size$a as$) bs$))) (power$ (size$ bs$) (size$a as$))))
(assume a6 (= top$ (set$ (map$ uu$ (n_lists$ (size$a as$) bs$)))))
(step t7 (cl (not (= (card$ top$) (card$ (set$ (map$ uu$ (n_lists$ (size$a as$) bs$)))))) (not (= (card$ (set$ (map$ uu$ (n_lists$ (size$a as$) bs$)))) (size$b (map$ uu$ (n_lists$ (size$a as$) bs$))))) (not (= (size$b (map$ uu$ (n_lists$ (size$a as$) bs$))) (power$ (size$ bs$) (size$a as$)))) (not (= (power$ (card$a top$a) (card$b top$b)) (power$ (size$ bs$) (size$a as$)))) (= (card$ top$) (power$ (card$a top$a) (card$b top$b)))) :rule eq_transitive)
(step t8 (cl (not (= top$ (set$ (map$ uu$ (n_lists$ (size$a as$) bs$))))) (= (card$ top$) (card$ (set$ (map$ uu$ (n_lists$ (size$a as$) bs$)))))) :rule eq_congruent)
(step t9 (cl (not (= (card$ (set$ (map$ uu$ (n_lists$ (size$a as$) bs$)))) (size$b (map$ uu$ (n_lists$ (size$a as$) bs$))))) (not (= (size$b (map$ uu$ (n_lists$ (size$a as$) bs$))) (power$ (size$ bs$) (size$a as$)))) (not (= (power$ (card$a top$a) (card$b top$b)) (power$ (size$ bs$) (size$a as$)))) (= (card$ top$) (power$ (card$a top$a) (card$b top$b))) (not (= top$ (set$ (map$ uu$ (n_lists$ (size$a as$) bs$)))))) :rule th_resolution :premises (t7 t8))
(step t10 (cl (not (= (card$a top$a) (size$ bs$))) (not (= (card$b top$b) (size$a as$))) (= (power$ (card$a top$a) (card$b top$b)) (power$ (size$ bs$) (size$a as$)))) :rule eq_congruent)
(step t11 (cl (not (= (card$ (set$ (map$ uu$ (n_lists$ (size$a as$) bs$)))) (size$b (map$ uu$ (n_lists$ (size$a as$) bs$))))) (not (= (size$b (map$ uu$ (n_lists$ (size$a as$) bs$))) (power$ (size$ bs$) (size$a as$)))) (= (card$ top$) (power$ (card$a top$a) (card$b top$b))) (not (= top$ (set$ (map$ uu$ (n_lists$ (size$a as$) bs$))))) (not (= (card$a top$a) (size$ bs$))) (not (= (card$b top$b) (size$a as$)))) :rule th_resolution :premises (t9 t10))
(step t12 (cl) :rule resolution :premises (t11 a1 a2 a3 a4 a5 a6))
