; smt.random_seed=1 smt.refine_inj_axioms=false -T:30 -smt2
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort C$ 0)
(declare-sort A_set$ 0)
(declare-sort B_set$ 0)
(declare-sort A_c_fun$ 0)
(declare-sort B_c_fun$ 0)
(declare-sort A_b_prod$ 0)
(declare-sort A_b_prod_set$ 0)
(declare-sort A_b_prod_c_fun$ 0)
(declare-fun a$ () B$)
(declare-fun b$ () B$)
(declare-fun f$ () A_b_prod_c_fun$)
(declare-fun g$ () A_b_prod_c_fun$)
(declare-fun s$ () A_b_prod_set$)
(declare-fun g1$ (B$) A$)
(declare-fun g2$ (B$) A$)
(declare-fun uu$ (B$) A_c_fun$)
(declare-fun top$ () A_set$)
(declare-fun uua$ () B_c_fun$)
(declare-fun uub$ (B$) A_c_fun$)
(declare-fun uuc$ () B_c_fun$)
(declare-fun cbox$ (A$ A$) A_set$)
(declare-fun pair$ (A$ B$) A_b_prod$)
(declare-fun top$a () A_b_prod_set$)
(declare-fun top$b () B_set$)
(declare-fun cbox$a (B$ B$) B_set$)
(declare-fun fun_app$ (B_c_fun$ B$) C$)
(declare-fun fun_app$a (A_c_fun$ A$) C$)
(declare-fun fun_app$b (A_b_prod_c_fun$ A_b_prod$) C$)
(declare-fun integral$ (A_set$ A_c_fun$) C$)
(declare-fun integral$a (A_b_prod_set$ A_b_prod_c_fun$) C$)
(declare-fun integral$b (B_set$ B_c_fun$) C$)
(assert (! (forall ((?v0 B$)) (! (= (fun_app$ uua$ ?v0) (integral$ (cbox$ (g1$ ?v0) (g2$ ?v0)) (uu$ ?v0))) :pattern ((fun_app$ uua$ ?v0)))) :named a0))
(assert (! (forall ((?v0 B$)) (! (= (fun_app$ uuc$ ?v0) (integral$ top$ (uub$ ?v0))) :pattern ((fun_app$ uuc$ ?v0)))) :named a1))
(assert (! (forall ((?v0 B$) (?v1 A$)) (! (= (fun_app$a (uu$ ?v0) ?v1) (fun_app$b g$ (pair$ ?v1 ?v0))) :pattern ((fun_app$a (uu$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 B$) (?v1 A$)) (! (= (fun_app$a (uub$ ?v0) ?v1) (fun_app$b f$ (pair$ ?v1 ?v0))) :pattern ((fun_app$a (uub$ ?v0) ?v1)))) :named a3))
(assert (! (not (= (integral$a s$ g$) (integral$b (cbox$a a$ b$) uua$))) :named a4))
(assert (! (= (integral$a top$a f$) (integral$a s$ g$)) :named a5))
(assert (! (= (integral$b top$b uuc$) (integral$b (cbox$a a$ b$) uua$)) :named a6))
(assert (! (= (integral$a top$a f$) (integral$b top$b uuc$)) :named a7))
(check-sat)
;;;;(get-proof)
