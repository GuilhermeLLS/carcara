; --index-fresh-sorts --proof-version=2 --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIRA)
(declare-sort A$ 0)
(declare-sort Real_set$ 0)
(declare-sort Real_a_fun$ 0)
(declare-sort Real_real_fun$ 0)
(declare-fun a$ () Real)
(declare-fun b$ () Real)
(declare-fun c$ () Real)
(declare-fun d$ () Real)
(declare-fun f$ () Real_a_fun$)
(declare-fun g$ () Real_real_fun$)
(declare-fun s$ () Real_set$)
(declare-fun x$ () Real)
(declare-fun uu$ (Real) Real_real_fun$)
(declare-fun uua$ () Real_a_fun$)
(declare-fun image$ (Real_real_fun$ Real_set$) Real_set$)
(declare-fun minus$ (Real_set$ Real_set$) Real_set$)
(declare-fun finite$ (Real_set$) Bool)
(declare-fun member$ (Real Real_set$) Bool)
(declare-fun fun_app$ (Real_a_fun$ Real) A$)
(declare-fun less_eq$ (Real_set$ Real_set$) Bool)
(declare-fun fun_app$a (Real_real_fun$ Real) Real)
(declare-fun integral$ (Real_set$ Real_a_fun$) A$)
(declare-fun atLeastAtMost$ (Real Real) Real_set$)
(declare-fun continuous_on$ (Real_set$ Real_a_fun$) Bool)
(declare-fun integrable_on$ (Real_a_fun$ Real_set$) Bool)
(assert (! (forall ((?v0 Real)) (! (= (fun_app$ uua$ ?v0) (integral$ (atLeastAtMost$ c$ (fun_app$a g$ ?v0)) f$)) :pattern ((fun_app$ uua$ ?v0)))) :named a0))
(assert (! (forall ((?v0 Real) (?v1 Real)) (! (= (fun_app$a (uu$ ?v0) ?v1) (- ?v0 ?v1)) :pattern ((fun_app$a (uu$ ?v0) ?v1)))) :named a1))
(assert (! (not (integrable_on$ f$ (atLeastAtMost$ c$ d$))) :named a2))
(assert (! (integrable_on$ f$ (atLeastAtMost$ c$ d$)) :named a3))
(assert (! (continuous_on$ (minus$ (atLeastAtMost$ c$ d$) (image$ g$ s$)) f$) :named a4))
(assert (! (finite$ s$) :named a5))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real_a_fun$)) (=> (continuous_on$ (atLeastAtMost$ ?v0 ?v1) ?v2) (integrable_on$ ?v2 (atLeastAtMost$ ?v0 ?v1)))) :named a6))
(assert (! (less_eq$ (image$ g$ (atLeastAtMost$ a$ b$)) (atLeastAtMost$ c$ d$)) :named a7))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_set$) (?v2 Real_a_fun$)) (=> (and (integrable_on$ ?v0 ?v1) (forall ((?v3 Real)) (=> (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v3) (fun_app$ ?v2 ?v3))))) (integrable_on$ ?v2 ?v1))) :named a8))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real_a_fun$)) (=> (continuous_on$ (atLeastAtMost$ ?v0 ?v1) ?v2) (integrable_on$ ?v2 (atLeastAtMost$ ?v0 ?v1)))) :named a9))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real) (?v3 Real_a_fun$)) (=> (and (<= ?v0 ?v1) (and (<= ?v1 ?v2) (and (integrable_on$ ?v3 (atLeastAtMost$ ?v0 ?v1)) (integrable_on$ ?v3 (atLeastAtMost$ ?v1 ?v2))))) (integrable_on$ ?v3 (atLeastAtMost$ ?v0 ?v2)))) :named a10))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real) (?v2 Real) (?v3 Real) (?v4 Real)) (=> (and (integrable_on$ ?v0 (atLeastAtMost$ ?v1 ?v2)) (less_eq$ (atLeastAtMost$ ?v3 ?v4) (atLeastAtMost$ ?v1 ?v2))) (integrable_on$ ?v0 (atLeastAtMost$ ?v3 ?v4)))) :named a11))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_set$) (?v2 Real) (?v3 Real)) (=> (and (integrable_on$ ?v0 ?v1) (less_eq$ (atLeastAtMost$ ?v2 ?v3) ?v1)) (integrable_on$ ?v0 (atLeastAtMost$ ?v2 ?v3)))) :named a12))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (image$ (uu$ ?v0) (atLeastAtMost$ ?v1 ?v2)) (atLeastAtMost$ (- ?v0 ?v2) (- ?v0 ?v1)))) :named a13))
(assert (! (continuous_on$ (atLeastAtMost$ a$ b$) uua$) :named a14))
(assert (! (member$ x$ (minus$ (atLeastAtMost$ a$ b$) s$)) :named a15))
(check-sat)
;;;;(get-proof)
