; --index-fresh-sorts --proof-version=2 --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIRA)
(declare-sort Real_set$ 0)
(declare-sort Real_set_set$ 0)
(declare-sort Real_set_set_set$ 0)
(declare-sort Real_set_set_set_set$ 0)
(declare-fun a$ () Real)
(declare-fun b$ () Real)
(declare-fun s$ () Real_set_set$)
(declare-fun x$ () Real)
(declare-fun bot$ () Real_set$)
(declare-fun sup$ (Real_set_set$) Real_set$)
(declare-fun sup$a (Real_set$ Real_set$) Real_set$)
(declare-fun sup$b (Real_set_set_set_set$) Real_set_set_set$)
(declare-fun sup$c (Real_set_set_set_set$ Real_set_set_set_set$) Real_set_set_set_set$)
(declare-fun sup$d (Real_set_set_set$ Real_set_set_set$) Real_set_set_set$)
(declare-fun sup$e (Real_set_set_set$) Real_set_set$)
(declare-fun sup$f (Real_set_set$ Real_set_set$) Real_set_set$)
(declare-fun minus$ (Real_set$ Real_set$) Real_set$)
(declare-fun finite$ (Real_set_set$) Bool)
(declare-fun insert$ (Real Real_set$) Real_set$)
(declare-fun member$ (Real_set$ Real_set_set$) Bool)
(declare-fun member$a (Real Real_set$) Bool)
(declare-fun atLeastAtMost$ (Real Real) Real_set$)
(declare-fun atLeastLessThan$ (Real Real) Real_set$)
(declare-fun greaterThanAtMost$ (Real Real) Real_set$)
(assert (! (not (= (sup$ s$) (sup$a (atLeastLessThan$ a$ x$) (greaterThanAtMost$ x$ b$)))) :named a0))
(assert (! (not (exists ((?v0 Real_set$)) (and (member$ ?v0 s$) (member$a x$ ?v0)))) :named a1))
(assert (! (forall ((?v0 Real_set$)) (=> (member$ ?v0 s$) (not (member$a x$ ?v0)))) :named a2))
(assert (! (not (member$a x$ (sup$ s$))) :named a3))
(assert (! (finite$ s$) :named a4))
(assert (! (= (sup$ s$) (minus$ (atLeastAtMost$ a$ b$) (insert$ x$ bot$))) :named a5))
(assert (! (= (minus$ (atLeastAtMost$ a$ b$) (insert$ x$ bot$)) (sup$a (atLeastLessThan$ a$ x$) (greaterThanAtMost$ x$ b$))) :named a6))
(assert (! (member$a x$ (atLeastAtMost$ a$ b$)) :named a7))
(assert (! (< x$ b$) :named a8))
(assert (! (< a$ x$) :named a9))
(assert (! (= (sup$a (insert$ x$ bot$) (sup$ s$)) (atLeastAtMost$ a$ b$)) :named a10))
(assert (! (forall ((?v0 Real_set$)) (=> (member$ ?v0 s$) (exists ((?v1 Real) (?v2 Real)) (and (< ?v1 ?v2) (= (atLeastAtMost$ ?v1 ?v2) ?v0))))) :named a11))
(assert (! (forall ((?v0 Real_set_set_set_set$) (?v1 Real_set_set_set_set$)) (= (sup$b (sup$c ?v0 ?v1)) (sup$d (sup$b ?v0) (sup$b ?v1)))) :named a12))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set$)) (= (sup$e (sup$d ?v0 ?v1)) (sup$f (sup$e ?v0) (sup$e ?v1)))) :named a13))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set$)) (= (sup$ (sup$f ?v0 ?v1)) (sup$a (sup$ ?v0) (sup$ ?v1)))) :named a14))
(assert (! (forall ((?v0 Real_set_set_set_set$) (?v1 Real_set_set_set_set$)) (= (sup$b (sup$c ?v0 ?v1)) (sup$d (sup$b ?v0) (sup$b ?v1)))) :named a15))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set$)) (= (sup$e (sup$d ?v0 ?v1)) (sup$f (sup$e ?v0) (sup$e ?v1)))) :named a16))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set$)) (= (sup$ (sup$f ?v0 ?v1)) (sup$a (sup$ ?v0) (sup$ ?v1)))) :named a17))
(check-sat)
;;;;(get-proof)
