; --index-fresh-sorts --proof-version=2 --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIRA)
(declare-sort A$ 0)
(declare-sort A_a_prod$ 0)
(declare-sort Real_set$ 0)
(declare-sort Real_a_fun$ 0)
(declare-sort A_real_prod$ 0)
(declare-sort Real_a_prod$ 0)
(declare-sort Real_filter$ 0)
(declare-sort Real_real_fun$ 0)
(declare-sort Real_real_prod$ 0)
(declare-sort Real_a_a_prod_fun$ 0)
(declare-sort A_real_a_prod_prod$ 0)
(declare-sort Real_a_prod_a_prod$ 0)
(declare-sort Real_a_real_prod_fun$ 0)
(declare-sort Real_real_a_prod_fun$ 0)
(declare-sort A_real_real_prod_prod$ 0)
(declare-sort Real_a_prod_real_prod$ 0)
(declare-sort Real_real_a_prod_prod$ 0)
(declare-sort Real_real_real_prod_fun$ 0)
(declare-sort Real_real_prod_real_prod$ 0)
(declare-sort Real_real_real_prod_prod$ 0)
(declare-sort Real_real_a_prod_a_prod_fun$ 0)
(declare-sort Real_a_prod_real_a_prod_prod$ 0)
(declare-sort Real_a_real_real_prod_prod_fun$ 0)
(declare-sort Real_real_a_prod_real_prod_fun$ 0)
(declare-sort Real_real_real_a_prod_prod_fun$ 0)
(declare-sort Real_real_real_prod_real_prod_fun$ 0)
(declare-sort Real_real_real_real_prod_prod_fun$ 0)
(declare-sort A_real_a_prod_real_a_prod_prod_prod$ 0)
(declare-sort Real_real_a_prod_real_a_prod_prod_fun$ 0)
(declare-sort Real_real_a_prod_real_a_prod_prod_prod$ 0)
(declare-sort Real_real_real_a_prod_real_a_prod_prod_prod_fun$ 0)
(declare-fun d$ () Real)
(declare-fun f$ () Real_real_fun$)
(declare-fun x$ () Real)
(declare-fun uu$ () Real_real_a_prod_fun$)
(declare-fun top$ () Real_set$)
(declare-fun uua$ () Real_real_real_a_prod_real_a_prod_prod_prod_fun$)
(declare-fun uub$ () Real_real_real_prod_fun$)
(declare-fun uuc$ () Real_real_real_a_prod_prod_fun$)
(declare-fun uud$ (Real_real_fun$ Real_a_fun$) Real_real_a_prod_fun$)
(declare-fun uue$ (Real_real_fun$ Real_real_fun$) Real_real_real_prod_fun$)
(declare-fun uuf$ (Real_real_a_prod_fun$ Real_real_fun$) Real_real_a_prod_real_prod_fun$)
(declare-fun uug$ (Real_real_fun$ Real_real_a_prod_fun$) Real_real_real_a_prod_prod_fun$)
(declare-fun uuh$ (Real_real_a_prod_fun$ Real_real_a_prod_fun$) Real_real_a_prod_real_a_prod_prod_fun$)
(declare-fun uui$ (Real_a_fun$ Real_real_fun$) Real_a_real_prod_fun$)
(declare-fun uuj$ (Real_a_fun$ Real_a_fun$) Real_a_a_prod_fun$)
(declare-fun uuk$ (Real_real_a_prod_fun$ Real_a_fun$) Real_real_a_prod_a_prod_fun$)
(declare-fun uul$ (Real_real_fun$ Real_real_real_prod_fun$) Real_real_real_real_prod_prod_fun$)
(declare-fun uum$ (Real_real_real_prod_fun$ Real_real_fun$) Real_real_real_prod_real_prod_fun$)
(declare-fun pair$ (Real Real_a_prod_real_a_prod_prod$) Real_real_a_prod_real_a_prod_prod_prod$)
(declare-fun zero$ () Real_a_prod_real_a_prod_prod$)
(declare-fun pair$a (Real Real_a_prod$) Real_real_a_prod_prod$)
(declare-fun pair$b (Real) Real_real_real_prod_fun$)
(declare-fun pair$c (Real A$) Real_a_prod$)
(declare-fun pair$d (Real_real_prod$ Real) Real_real_prod_real_prod$)
(declare-fun pair$e (Real_a_prod$ Real_a_prod$) Real_a_prod_real_a_prod_prod$)
(declare-fun pair$f (Real_a_prod$) Real_real_a_prod_real_prod_fun$)
(declare-fun pair$g (Real_a_prod$ A$) Real_a_prod_a_prod$)
(declare-fun pair$h (Real Real_real_prod$) Real_real_real_prod_prod$)
(declare-fun pair$i (A$) Real_a_real_prod_fun$)
(declare-fun pair$j (A$ A$) A_a_prod$)
(declare-fun pair$k (A$ Real_a_prod$) A_real_a_prod_prod$)
(declare-fun zero$a () Real_a_prod$)
(declare-fun zero$b () A$)
(declare-fun zero$c () Real_real_prod$)
(declare-fun zero$d () A_real_a_prod_real_a_prod_prod_prod$)
(declare-fun zero$e () A_real_a_prod_prod$)
(declare-fun zero$f () A_real_prod$)
(declare-fun zero$g () A_a_prod$)
(declare-fun scaleR$ (Real Real_real_a_prod_real_a_prod_prod_prod$) Real_real_a_prod_real_a_prod_prod_prod$)
(declare-fun fun_app$ (Real_real_real_a_prod_real_a_prod_prod_prod_fun$ Real) Real_real_a_prod_real_a_prod_prod_prod$)
(declare-fun scaleR$a (Real Real_real_a_prod_prod$) Real_real_a_prod_prod$)
(declare-fun scaleR$b (Real Real_real_prod$) Real_real_prod$)
(declare-fun scaleR$c (Real Real_a_prod$) Real_a_prod$)
(declare-fun scaleR$d (Real) Real_real_fun$)
(declare-fun scaleR$e (Real A$) A$)
(declare-fun scaleR$f (Real Real_a_prod_real_a_prod_prod$) Real_a_prod_real_a_prod_prod$)
(declare-fun scaleR$g (Real A_real_prod$) A_real_prod$)
(declare-fun scaleR$h (Real A_a_prod$) A_a_prod$)
(declare-fun scaleR$i (Real Real_a_prod_real_prod$) Real_a_prod_real_prod$)
(declare-fun scaleR$j (Real Real_a_prod_a_prod$) Real_a_prod_a_prod$)
(declare-fun scaleR$k (Real A_real_a_prod_prod$) A_real_a_prod_prod$)
(declare-fun scaleR$l (Real A_real_a_prod_real_a_prod_prod_prod$) A_real_a_prod_real_a_prod_prod_prod$)
(declare-fun fun_app$a (Real_real_fun$ Real) Real)
(declare-fun fun_app$b (Real_real_real_a_prod_prod_fun$ Real) Real_real_a_prod_prod$)
(declare-fun fun_app$c (Real_real_real_prod_fun$ Real) Real_real_prod$)
(declare-fun fun_app$d (Real_real_a_prod_fun$ Real) Real_a_prod$)
(declare-fun fun_app$e (Real_real_real_prod_real_prod_fun$ Real) Real_real_prod_real_prod$)
(declare-fun fun_app$f (Real_real_a_prod_real_a_prod_prod_fun$ Real) Real_a_prod_real_a_prod_prod$)
(declare-fun fun_app$g (Real_real_a_prod_real_prod_fun$ Real) Real_a_prod_real_prod$)
(declare-fun fun_app$h (Real_real_a_prod_a_prod_fun$ Real) Real_a_prod_a_prod$)
(declare-fun fun_app$i (Real_a_fun$ Real) A$)
(declare-fun fun_app$j (Real_real_real_real_prod_prod_fun$ Real) Real_real_real_prod_prod$)
(declare-fun fun_app$k (Real_a_real_prod_fun$ Real) A_real_prod$)
(declare-fun fun_app$l (Real_a_a_prod_fun$ Real) A_a_prod$)
(declare-fun at_within$ (Real Real_set$) Real_filter$)
(declare-fun has_vector_derivative$ (Real_real_a_prod_fun$ Real_a_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$a (Real_real_real_a_prod_real_a_prod_prod_prod_fun$ Real_real_a_prod_real_a_prod_prod_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$b (Real_real_real_prod_fun$ Real_real_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$c (Real_real_real_a_prod_prod_fun$ Real_real_a_prod_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$d (Real_real_fun$ Real Real_filter$) Bool)
(declare-fun has_vector_derivative$e (Real_a_fun$ A$ Real_filter$) Bool)
(declare-fun has_vector_derivative$f (Real_real_a_prod_real_prod_fun$ Real_a_prod_real_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$g (Real_real_a_prod_real_a_prod_prod_fun$ Real_a_prod_real_a_prod_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$h (Real_a_real_prod_fun$ A_real_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$i (Real_a_a_prod_fun$ A_a_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$j (Real_real_a_prod_a_prod_fun$ Real_a_prod_a_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$k (Real_real_real_real_prod_prod_fun$ Real_real_real_prod_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$l (Real_real_real_prod_real_prod_fun$ Real_real_prod_real_prod$ Real_filter$) Bool)
(declare-fun has_vector_derivative$m (Real_a_real_real_prod_prod_fun$ A_real_real_prod_prod$ Real_filter$) Bool)
(assert (! (forall ((?v0 Real)) (! (= (fun_app$ uua$ ?v0) (scaleR$ (fun_app$a f$ ?v0) (pair$ 1.0 zero$))) :pattern ((fun_app$ uua$ ?v0)))) :named a0))
(assert (! (forall ((?v0 Real)) (! (= (fun_app$b uuc$ ?v0) (scaleR$a (fun_app$a f$ ?v0) (pair$a 1.0 zero$a))) :pattern ((fun_app$b uuc$ ?v0)))) :named a1))
(assert (! (forall ((?v0 Real)) (! (= (fun_app$c uub$ ?v0) (scaleR$b (fun_app$a f$ ?v0) (fun_app$c (pair$b 1.0) 0.0))) :pattern ((fun_app$c uub$ ?v0)))) :named a2))
(assert (! (forall ((?v0 Real)) (! (= (fun_app$d uu$ ?v0) (scaleR$c (fun_app$a f$ ?v0) (pair$c 1.0 zero$b))) :pattern ((fun_app$d uu$ ?v0)))) :named a3))
(assert (! (forall ((?v0 Real_real_real_prod_fun$) (?v1 Real_real_fun$) (?v2 Real)) (! (= (fun_app$e (uum$ ?v0 ?v1) ?v2) (pair$d (fun_app$c ?v0 ?v2) (fun_app$a ?v1 ?v2))) :pattern ((fun_app$e (uum$ ?v0 ?v1) ?v2)))) :named a4))
(assert (! (forall ((?v0 Real_real_a_prod_fun$) (?v1 Real_real_a_prod_fun$) (?v2 Real)) (! (= (fun_app$f (uuh$ ?v0 ?v1) ?v2) (pair$e (fun_app$d ?v0 ?v2) (fun_app$d ?v1 ?v2))) :pattern ((fun_app$f (uuh$ ?v0 ?v1) ?v2)))) :named a5))
(assert (! (forall ((?v0 Real_real_a_prod_fun$) (?v1 Real_real_fun$) (?v2 Real)) (! (= (fun_app$g (uuf$ ?v0 ?v1) ?v2) (fun_app$g (pair$f (fun_app$d ?v0 ?v2)) (fun_app$a ?v1 ?v2))) :pattern ((fun_app$g (uuf$ ?v0 ?v1) ?v2)))) :named a6))
(assert (! (forall ((?v0 Real_real_a_prod_fun$) (?v1 Real_a_fun$) (?v2 Real)) (! (= (fun_app$h (uuk$ ?v0 ?v1) ?v2) (pair$g (fun_app$d ?v0 ?v2) (fun_app$i ?v1 ?v2))) :pattern ((fun_app$h (uuk$ ?v0 ?v1) ?v2)))) :named a7))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_real_prod_fun$) (?v2 Real)) (! (= (fun_app$j (uul$ ?v0 ?v1) ?v2) (pair$h (fun_app$a ?v0 ?v2) (fun_app$c ?v1 ?v2))) :pattern ((fun_app$j (uul$ ?v0 ?v1) ?v2)))) :named a8))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_a_prod_fun$) (?v2 Real)) (! (= (fun_app$b (uug$ ?v0 ?v1) ?v2) (pair$a (fun_app$a ?v0 ?v2) (fun_app$d ?v1 ?v2))) :pattern ((fun_app$b (uug$ ?v0 ?v1) ?v2)))) :named a9))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real)) (! (= (fun_app$c (uue$ ?v0 ?v1) ?v2) (fun_app$c (pair$b (fun_app$a ?v0 ?v2)) (fun_app$a ?v1 ?v2))) :pattern ((fun_app$c (uue$ ?v0 ?v1) ?v2)))) :named a10))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_a_fun$) (?v2 Real)) (! (= (fun_app$d (uud$ ?v0 ?v1) ?v2) (pair$c (fun_app$a ?v0 ?v2) (fun_app$i ?v1 ?v2))) :pattern ((fun_app$d (uud$ ?v0 ?v1) ?v2)))) :named a11))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_real_fun$) (?v2 Real)) (! (= (fun_app$k (uui$ ?v0 ?v1) ?v2) (fun_app$k (pair$i (fun_app$i ?v0 ?v2)) (fun_app$a ?v1 ?v2))) :pattern ((fun_app$k (uui$ ?v0 ?v1) ?v2)))) :named a12))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_a_fun$) (?v2 Real)) (! (= (fun_app$l (uuj$ ?v0 ?v1) ?v2) (pair$j (fun_app$i ?v0 ?v2) (fun_app$i ?v1 ?v2))) :pattern ((fun_app$l (uuj$ ?v0 ?v1) ?v2)))) :named a13))
(assert (! (not (has_vector_derivative$ uu$ (pair$c d$ zero$b) (at_within$ x$ top$))) :named a14))
(assert (! (= (pair$c d$ zero$b) (scaleR$c d$ (pair$c 1.0 zero$b))) :named a15))
(assert (! (has_vector_derivative$a uua$ (scaleR$ d$ (pair$ 1.0 zero$)) (at_within$ x$ top$)) :named a16))
(assert (! (has_vector_derivative$b uub$ (scaleR$b d$ (fun_app$c (pair$b 1.0) 0.0)) (at_within$ x$ top$)) :named a17))
(assert (! (has_vector_derivative$c uuc$ (scaleR$a d$ (pair$a 1.0 zero$a)) (at_within$ x$ top$)) :named a18))
(assert (! (has_vector_derivative$ uu$ (scaleR$c d$ (pair$c 1.0 zero$b)) (at_within$ x$ top$)) :named a19))
(assert (! (has_vector_derivative$d f$ d$ (at_within$ x$ top$)) :named a20))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 A$)) (! (= (scaleR$c ?v0 (pair$c ?v1 ?v2)) (pair$c (fun_app$a (scaleR$d ?v0) ?v1) (scaleR$e ?v0 ?v2))) :pattern ((scaleR$c ?v0 (pair$c ?v1 ?v2))))) :named a21))
(assert (! (forall ((?v0 Real) (?v1 Real_a_prod$) (?v2 Real_a_prod$)) (! (= (scaleR$f ?v0 (pair$e ?v1 ?v2)) (pair$e (scaleR$c ?v0 ?v1) (scaleR$c ?v0 ?v2))) :pattern ((scaleR$f ?v0 (pair$e ?v1 ?v2))))) :named a22))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (! (= (scaleR$b ?v0 (fun_app$c (pair$b ?v1) ?v2)) (fun_app$c (pair$b (fun_app$a (scaleR$d ?v0) ?v1)) (fun_app$a (scaleR$d ?v0) ?v2))) :pattern ((scaleR$b ?v0 (fun_app$c (pair$b ?v1) ?v2))))) :named a23))
(assert (! (forall ((?v0 Real) (?v1 A$) (?v2 Real)) (! (= (scaleR$g ?v0 (fun_app$k (pair$i ?v1) ?v2)) (fun_app$k (pair$i (scaleR$e ?v0 ?v1)) (fun_app$a (scaleR$d ?v0) ?v2))) :pattern ((scaleR$g ?v0 (fun_app$k (pair$i ?v1) ?v2))))) :named a24))
(assert (! (forall ((?v0 Real) (?v1 A$) (?v2 A$)) (! (= (scaleR$h ?v0 (pair$j ?v1 ?v2)) (pair$j (scaleR$e ?v0 ?v1) (scaleR$e ?v0 ?v2))) :pattern ((scaleR$h ?v0 (pair$j ?v1 ?v2))))) :named a25))
(assert (! (forall ((?v0 Real) (?v1 Real_a_prod$) (?v2 Real)) (! (= (scaleR$i ?v0 (fun_app$g (pair$f ?v1) ?v2)) (fun_app$g (pair$f (scaleR$c ?v0 ?v1)) (fun_app$a (scaleR$d ?v0) ?v2))) :pattern ((scaleR$i ?v0 (fun_app$g (pair$f ?v1) ?v2))))) :named a26))
(assert (! (forall ((?v0 Real) (?v1 Real_a_prod$) (?v2 A$)) (! (= (scaleR$j ?v0 (pair$g ?v1 ?v2)) (pair$g (scaleR$c ?v0 ?v1) (scaleR$e ?v0 ?v2))) :pattern ((scaleR$j ?v0 (pair$g ?v1 ?v2))))) :named a27))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real_a_prod$)) (! (= (scaleR$a ?v0 (pair$a ?v1 ?v2)) (pair$a (fun_app$a (scaleR$d ?v0) ?v1) (scaleR$c ?v0 ?v2))) :pattern ((scaleR$a ?v0 (pair$a ?v1 ?v2))))) :named a28))
(assert (! (forall ((?v0 Real) (?v1 A$) (?v2 Real_a_prod$)) (! (= (scaleR$k ?v0 (pair$k ?v1 ?v2)) (pair$k (scaleR$e ?v0 ?v1) (scaleR$c ?v0 ?v2))) :pattern ((scaleR$k ?v0 (pair$k ?v1 ?v2))))) :named a29))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real_a_prod_real_a_prod_prod$)) (! (= (scaleR$ ?v0 (pair$ ?v1 ?v2)) (pair$ (fun_app$a (scaleR$d ?v0) ?v1) (scaleR$f ?v0 ?v2))) :pattern ((scaleR$ ?v0 (pair$ ?v1 ?v2))))) :named a30))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 A$)) (! (= (scaleR$c ?v0 (pair$c ?v1 ?v2)) (pair$c (fun_app$a (scaleR$d ?v0) ?v1) (scaleR$e ?v0 ?v2))) :pattern ((scaleR$c ?v0 (pair$c ?v1 ?v2))))) :named a31))
(assert (! (forall ((?v0 Real) (?v1 Real_a_prod$) (?v2 Real_a_prod$)) (! (= (scaleR$f ?v0 (pair$e ?v1 ?v2)) (pair$e (scaleR$c ?v0 ?v1) (scaleR$c ?v0 ?v2))) :pattern ((scaleR$f ?v0 (pair$e ?v1 ?v2))))) :named a32))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (! (= (scaleR$b ?v0 (fun_app$c (pair$b ?v1) ?v2)) (fun_app$c (pair$b (fun_app$a (scaleR$d ?v0) ?v1)) (fun_app$a (scaleR$d ?v0) ?v2))) :pattern ((scaleR$b ?v0 (fun_app$c (pair$b ?v1) ?v2))))) :named a33))
(assert (! (forall ((?v0 Real) (?v1 A$) (?v2 Real)) (! (= (scaleR$g ?v0 (fun_app$k (pair$i ?v1) ?v2)) (fun_app$k (pair$i (scaleR$e ?v0 ?v1)) (fun_app$a (scaleR$d ?v0) ?v2))) :pattern ((scaleR$g ?v0 (fun_app$k (pair$i ?v1) ?v2))))) :named a34))
(assert (! (forall ((?v0 Real) (?v1 A$) (?v2 A$)) (! (= (scaleR$h ?v0 (pair$j ?v1 ?v2)) (pair$j (scaleR$e ?v0 ?v1) (scaleR$e ?v0 ?v2))) :pattern ((scaleR$h ?v0 (pair$j ?v1 ?v2))))) :named a35))
(assert (! (forall ((?v0 Real) (?v1 Real_a_prod$) (?v2 Real)) (! (= (scaleR$i ?v0 (fun_app$g (pair$f ?v1) ?v2)) (fun_app$g (pair$f (scaleR$c ?v0 ?v1)) (fun_app$a (scaleR$d ?v0) ?v2))) :pattern ((scaleR$i ?v0 (fun_app$g (pair$f ?v1) ?v2))))) :named a36))
(assert (! (forall ((?v0 Real) (?v1 Real_a_prod$) (?v2 A$)) (! (= (scaleR$j ?v0 (pair$g ?v1 ?v2)) (pair$g (scaleR$c ?v0 ?v1) (scaleR$e ?v0 ?v2))) :pattern ((scaleR$j ?v0 (pair$g ?v1 ?v2))))) :named a37))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real_a_prod$)) (! (= (scaleR$a ?v0 (pair$a ?v1 ?v2)) (pair$a (fun_app$a (scaleR$d ?v0) ?v1) (scaleR$c ?v0 ?v2))) :pattern ((scaleR$a ?v0 (pair$a ?v1 ?v2))))) :named a38))
(assert (! (forall ((?v0 Real) (?v1 A$) (?v2 Real_a_prod$)) (! (= (scaleR$k ?v0 (pair$k ?v1 ?v2)) (pair$k (scaleR$e ?v0 ?v1) (scaleR$c ?v0 ?v2))) :pattern ((scaleR$k ?v0 (pair$k ?v1 ?v2))))) :named a39))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real_a_prod_real_a_prod_prod$)) (! (= (scaleR$ ?v0 (pair$ ?v1 ?v2)) (pair$ (fun_app$a (scaleR$d ?v0) ?v1) (scaleR$f ?v0 ?v2))) :pattern ((scaleR$ ?v0 (pair$ ?v1 ?v2))))) :named a40))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real) (?v3 Real_set$) (?v4 Real_a_fun$) (?v5 A$)) (=> (and (has_vector_derivative$d ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_vector_derivative$e ?v4 ?v5 (at_within$ ?v2 ?v3))) (has_vector_derivative$ (uud$ ?v0 ?v4) (pair$c ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a41))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real) (?v3 Real_set$) (?v4 Real_real_fun$) (?v5 Real)) (=> (and (has_vector_derivative$d ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_vector_derivative$d ?v4 ?v5 (at_within$ ?v2 ?v3))) (has_vector_derivative$b (uue$ ?v0 ?v4) (fun_app$c (pair$b ?v1) ?v5) (at_within$ ?v2 ?v3)))) :named a42))
(assert (! (forall ((?v0 Real_real_a_prod_fun$) (?v1 Real_a_prod$) (?v2 Real) (?v3 Real_set$) (?v4 Real_real_fun$) (?v5 Real)) (=> (and (has_vector_derivative$ ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_vector_derivative$d ?v4 ?v5 (at_within$ ?v2 ?v3))) (has_vector_derivative$f (uuf$ ?v0 ?v4) (fun_app$g (pair$f ?v1) ?v5) (at_within$ ?v2 ?v3)))) :named a43))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real) (?v3 Real_set$) (?v4 Real_real_a_prod_fun$) (?v5 Real_a_prod$)) (=> (and (has_vector_derivative$d ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_vector_derivative$ ?v4 ?v5 (at_within$ ?v2 ?v3))) (has_vector_derivative$c (uug$ ?v0 ?v4) (pair$a ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a44))
(assert (! (forall ((?v0 Real_real_a_prod_fun$) (?v1 Real_a_prod$) (?v2 Real) (?v3 Real_set$) (?v4 Real_real_a_prod_fun$) (?v5 Real_a_prod$)) (=> (and (has_vector_derivative$ ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_vector_derivative$ ?v4 ?v5 (at_within$ ?v2 ?v3))) (has_vector_derivative$g (uuh$ ?v0 ?v4) (pair$e ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a45))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 A$) (?v2 Real) (?v3 Real_set$) (?v4 Real_real_fun$) (?v5 Real)) (=> (and (has_vector_derivative$e ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_vector_derivative$d ?v4 ?v5 (at_within$ ?v2 ?v3))) (has_vector_derivative$h (uui$ ?v0 ?v4) (fun_app$k (pair$i ?v1) ?v5) (at_within$ ?v2 ?v3)))) :named a46))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 A$) (?v2 Real) (?v3 Real_set$) (?v4 Real_a_fun$) (?v5 A$)) (=> (and (has_vector_derivative$e ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_vector_derivative$e ?v4 ?v5 (at_within$ ?v2 ?v3))) (has_vector_derivative$i (uuj$ ?v0 ?v4) (pair$j ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a47))
(assert (! (forall ((?v0 Real_real_a_prod_fun$) (?v1 Real_a_prod$) (?v2 Real) (?v3 Real_set$) (?v4 Real_a_fun$) (?v5 A$)) (=> (and (has_vector_derivative$ ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_vector_derivative$e ?v4 ?v5 (at_within$ ?v2 ?v3))) (has_vector_derivative$j (uuk$ ?v0 ?v4) (pair$g ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a48))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real) (?v3 Real_set$) (?v4 Real_real_real_prod_fun$) (?v5 Real_real_prod$)) (=> (and (has_vector_derivative$d ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_vector_derivative$b ?v4 ?v5 (at_within$ ?v2 ?v3))) (has_vector_derivative$k (uul$ ?v0 ?v4) (pair$h ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a49))
(assert (! (forall ((?v0 Real_real_real_prod_fun$) (?v1 Real_real_prod$) (?v2 Real) (?v3 Real_set$) (?v4 Real_real_fun$) (?v5 Real)) (=> (and (has_vector_derivative$b ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_vector_derivative$d ?v4 ?v5 (at_within$ ?v2 ?v3))) (has_vector_derivative$l (uum$ ?v0 ?v4) (pair$d ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a50))
(assert (! (forall ((?v0 Real_real_prod$)) (= (scaleR$b 1.0 ?v0) ?v0)) :named a51))
(assert (! (forall ((?v0 A_real_a_prod_real_a_prod_prod_prod$)) (= (scaleR$l 1.0 ?v0) ?v0)) :named a52))
(assert (! (forall ((?v0 A_real_a_prod_prod$)) (= (scaleR$k 1.0 ?v0) ?v0)) :named a53))
(assert (! (forall ((?v0 A_real_prod$)) (= (scaleR$g 1.0 ?v0) ?v0)) :named a54))
(assert (! (forall ((?v0 A_a_prod$)) (= (scaleR$h 1.0 ?v0) ?v0)) :named a55))
(assert (! (forall ((?v0 Real)) (= (fun_app$a (scaleR$d 1.0) ?v0) ?v0)) :named a56))
(assert (! (forall ((?v0 A$)) (= (scaleR$e 1.0 ?v0) ?v0)) :named a57))
(assert (! (forall ((?v0 Real_a_prod_real_a_prod_prod$)) (= (scaleR$f 1.0 ?v0) ?v0)) :named a58))
(assert (! (forall ((?v0 Real_a_prod$)) (= (scaleR$c 1.0 ?v0) ?v0)) :named a59))
(assert (! (forall ((?v0 Real) (?v1 Real_real_prod$)) (= (= (scaleR$b ?v0 ?v1) zero$c) (or (= ?v0 0.0) (= ?v1 zero$c)))) :named a60))
(assert (! (forall ((?v0 Real) (?v1 A_real_a_prod_real_a_prod_prod_prod$)) (= (= (scaleR$l ?v0 ?v1) zero$d) (or (= ?v0 0.0) (= ?v1 zero$d)))) :named a61))
(assert (! (forall ((?v0 Real) (?v1 A_real_a_prod_prod$)) (= (= (scaleR$k ?v0 ?v1) zero$e) (or (= ?v0 0.0) (= ?v1 zero$e)))) :named a62))
(assert (! (forall ((?v0 Real) (?v1 A_real_prod$)) (= (= (scaleR$g ?v0 ?v1) zero$f) (or (= ?v0 0.0) (= ?v1 zero$f)))) :named a63))
(assert (! (forall ((?v0 Real) (?v1 A_a_prod$)) (= (= (scaleR$h ?v0 ?v1) zero$g) (or (= ?v0 0.0) (= ?v1 zero$g)))) :named a64))
(assert (! (forall ((?v0 Real) (?v1 Real)) (= (= (fun_app$a (scaleR$d ?v0) ?v1) 0.0) (or (= ?v0 0.0) (= ?v1 0.0)))) :named a65))
(assert (! (forall ((?v0 Real) (?v1 Real_a_prod_real_a_prod_prod$)) (= (= (scaleR$f ?v0 ?v1) zero$) (or (= ?v0 0.0) (= ?v1 zero$)))) :named a66))
(assert (! (forall ((?v0 Real) (?v1 A$)) (= (= (scaleR$e ?v0 ?v1) zero$b) (or (= ?v0 0.0) (= ?v1 zero$b)))) :named a67))
(assert (! (forall ((?v0 Real) (?v1 Real_a_prod$)) (= (= (scaleR$c ?v0 ?v1) zero$a) (or (= ?v0 0.0) (= ?v1 zero$a)))) :named a68))
(assert (! (forall ((?v0 Real_real_prod$)) (= (scaleR$b 0.0 ?v0) zero$c)) :named a69))
(assert (! (forall ((?v0 A_real_a_prod_real_a_prod_prod_prod$)) (= (scaleR$l 0.0 ?v0) zero$d)) :named a70))
(assert (! (forall ((?v0 A_real_a_prod_prod$)) (= (scaleR$k 0.0 ?v0) zero$e)) :named a71))
(assert (! (forall ((?v0 A_real_prod$)) (= (scaleR$g 0.0 ?v0) zero$f)) :named a72))
(assert (! (forall ((?v0 A_a_prod$)) (= (scaleR$h 0.0 ?v0) zero$g)) :named a73))
(assert (! (forall ((?v0 Real)) (= (fun_app$a (scaleR$d 0.0) ?v0) 0.0)) :named a74))
(assert (! (forall ((?v0 Real_a_prod_real_a_prod_prod$)) (= (scaleR$f 0.0 ?v0) zero$)) :named a75))
(assert (! (forall ((?v0 A$)) (= (scaleR$e 0.0 ?v0) zero$b)) :named a76))
(assert (! (forall ((?v0 Real_a_prod$)) (= (scaleR$c 0.0 ?v0) zero$a)) :named a77))
(assert (! (forall ((?v0 Real)) (= (scaleR$b ?v0 zero$c) zero$c)) :named a78))
(assert (! (forall ((?v0 Real)) (= (scaleR$l ?v0 zero$d) zero$d)) :named a79))
(assert (! (forall ((?v0 Real)) (= (scaleR$k ?v0 zero$e) zero$e)) :named a80))
(assert (! (forall ((?v0 Real)) (= (scaleR$g ?v0 zero$f) zero$f)) :named a81))
(assert (! (forall ((?v0 Real)) (= (scaleR$h ?v0 zero$g) zero$g)) :named a82))
(assert (! (forall ((?v0 Real)) (= (fun_app$a (scaleR$d ?v0) 0.0) 0.0)) :named a83))
(assert (! (forall ((?v0 Real)) (= (scaleR$f ?v0 zero$) zero$)) :named a84))
(assert (! (forall ((?v0 Real)) (= (scaleR$e ?v0 zero$b) zero$b)) :named a85))
(assert (! (forall ((?v0 Real)) (= (scaleR$c ?v0 zero$a) zero$a)) :named a86))
(assert (! (forall ((?v0 Real) (?v1 Real_real_prod$) (?v2 Real)) (= (= (scaleR$b ?v0 ?v1) (scaleR$b ?v2 ?v1)) (or (= ?v0 ?v2) (= ?v1 zero$c)))) :named a87))
(assert (! (forall ((?v0 Real) (?v1 A_real_a_prod_real_a_prod_prod_prod$) (?v2 Real)) (= (= (scaleR$l ?v0 ?v1) (scaleR$l ?v2 ?v1)) (or (= ?v0 ?v2) (= ?v1 zero$d)))) :named a88))
(assert (! (forall ((?v0 Real) (?v1 A_real_a_prod_prod$) (?v2 Real)) (= (= (scaleR$k ?v0 ?v1) (scaleR$k ?v2 ?v1)) (or (= ?v0 ?v2) (= ?v1 zero$e)))) :named a89))
(assert (! (forall ((?v0 Real) (?v1 A_real_prod$) (?v2 Real)) (= (= (scaleR$g ?v0 ?v1) (scaleR$g ?v2 ?v1)) (or (= ?v0 ?v2) (= ?v1 zero$f)))) :named a90))
(assert (! (forall ((?v0 Real) (?v1 A_a_prod$) (?v2 Real)) (= (= (scaleR$h ?v0 ?v1) (scaleR$h ?v2 ?v1)) (or (= ?v0 ?v2) (= ?v1 zero$g)))) :named a91))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (= (fun_app$a (scaleR$d ?v0) ?v1) (fun_app$a (scaleR$d ?v2) ?v1)) (or (= ?v0 ?v2) (= ?v1 0.0)))) :named a92))
(assert (! (forall ((?v0 Real) (?v1 Real_a_prod_real_a_prod_prod$) (?v2 Real)) (= (= (scaleR$f ?v0 ?v1) (scaleR$f ?v2 ?v1)) (or (= ?v0 ?v2) (= ?v1 zero$)))) :named a93))
(assert (! (forall ((?v0 Real) (?v1 A$) (?v2 Real)) (= (= (scaleR$e ?v0 ?v1) (scaleR$e ?v2 ?v1)) (or (= ?v0 ?v2) (= ?v1 zero$b)))) :named a94))
(assert (! (forall ((?v0 Real) (?v1 Real_a_prod$) (?v2 Real)) (= (= (scaleR$c ?v0 ?v1) (scaleR$c ?v2 ?v1)) (or (= ?v0 ?v2) (= ?v1 zero$a)))) :named a95))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real) (?v3 Real)) (=> (and (has_vector_derivative$d ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$d ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a96))
(assert (! (forall ((?v0 Real_real_a_prod_fun$) (?v1 Real_a_prod$) (?v2 Real) (?v3 Real_a_prod$)) (=> (and (has_vector_derivative$ ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$ ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a97))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 A$) (?v2 Real) (?v3 A$)) (=> (and (has_vector_derivative$e ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$e ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a98))
(assert (! (forall ((?v0 Real_real_real_prod_fun$) (?v1 Real_real_prod$) (?v2 Real) (?v3 Real_real_prod$)) (=> (and (has_vector_derivative$b ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$b ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a99))
(assert (! (forall ((?v0 Real_real_real_a_prod_prod_fun$) (?v1 Real_real_a_prod_prod$) (?v2 Real) (?v3 Real_real_a_prod_prod$)) (=> (and (has_vector_derivative$c ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$c ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a100))
(assert (! (forall ((?v0 Real_real_a_prod_real_prod_fun$) (?v1 Real_a_prod_real_prod$) (?v2 Real) (?v3 Real_a_prod_real_prod$)) (=> (and (has_vector_derivative$f ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$f ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a101))
(assert (! (forall ((?v0 Real_real_a_prod_real_a_prod_prod_fun$) (?v1 Real_a_prod_real_a_prod_prod$) (?v2 Real) (?v3 Real_a_prod_real_a_prod_prod$)) (=> (and (has_vector_derivative$g ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$g ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a102))
(assert (! (forall ((?v0 Real_a_real_prod_fun$) (?v1 A_real_prod$) (?v2 Real) (?v3 A_real_prod$)) (=> (and (has_vector_derivative$h ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$h ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a103))
(assert (! (forall ((?v0 Real_a_a_prod_fun$) (?v1 A_a_prod$) (?v2 Real) (?v3 A_a_prod$)) (=> (and (has_vector_derivative$i ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$i ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a104))
(assert (! (forall ((?v0 Real_a_real_real_prod_prod_fun$) (?v1 A_real_real_prod_prod$) (?v2 Real) (?v3 A_real_real_prod_prod$)) (=> (and (has_vector_derivative$m ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$m ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a105))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real) (?v3 Real_set$)) (=> (has_vector_derivative$d ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$d ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a106))
(assert (! (forall ((?v0 Real_real_a_prod_fun$) (?v1 Real_a_prod$) (?v2 Real) (?v3 Real_set$)) (=> (has_vector_derivative$ ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$ ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a107))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 A$) (?v2 Real) (?v3 Real_set$)) (=> (has_vector_derivative$e ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$e ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a108))
(assert (! (forall ((?v0 Real_real_real_prod_fun$) (?v1 Real_real_prod$) (?v2 Real) (?v3 Real_set$)) (=> (has_vector_derivative$b ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$b ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a109))
(assert (! (forall ((?v0 Real_real_real_a_prod_prod_fun$) (?v1 Real_real_a_prod_prod$) (?v2 Real) (?v3 Real_set$)) (=> (has_vector_derivative$c ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$c ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a110))
(assert (! (forall ((?v0 Real_real_a_prod_real_prod_fun$) (?v1 Real_a_prod_real_prod$) (?v2 Real) (?v3 Real_set$)) (=> (has_vector_derivative$f ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$f ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a111))
(assert (! (forall ((?v0 Real_real_a_prod_real_a_prod_prod_fun$) (?v1 Real_a_prod_real_a_prod_prod$) (?v2 Real) (?v3 Real_set$)) (=> (has_vector_derivative$g ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$g ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a112))
(assert (! (forall ((?v0 Real_a_real_prod_fun$) (?v1 A_real_prod$) (?v2 Real) (?v3 Real_set$)) (=> (has_vector_derivative$h ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$h ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a113))
(assert (! (forall ((?v0 Real_a_a_prod_fun$) (?v1 A_a_prod$) (?v2 Real) (?v3 Real_set$)) (=> (has_vector_derivative$i ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$i ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a114))
(assert (! (forall ((?v0 Real_a_real_real_prod_prod_fun$) (?v1 A_real_real_prod_prod$) (?v2 Real) (?v3 Real_set$)) (=> (has_vector_derivative$m ?v0 ?v1 (at_within$ ?v2 top$)) (has_vector_derivative$m ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a115))
(check-sat)
;;;;(get-proof)
