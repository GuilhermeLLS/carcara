; --index-fresh-sorts --proof-version=2 --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIRA)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_filter$ 0)
(declare-sort Real_set$ 0)
(declare-sort A_real_fun$ 0)
(declare-sort Real_a_fun$ 0)
(declare-sort Real_filter$ 0)
(declare-sort A_a_a_fun_fun$ 0)
(declare-sort Real_real_fun$ 0)
(declare-sort A_a_real_fun_fun$ 0)
(declare-sort Real_real_a_fun_fun$ 0)
(declare-sort Real_real_real_fun_fun$ 0)
(declare-fun f$ () Real_a_fun$)
(declare-fun s$ () Real_set$)
(declare-fun uu$ (A$) Real_real_fun$)
(declare-fun top$ () Real_set$)
(declare-fun uua$ (Real_a_fun$ A$) Real_real_real_fun_fun$)
(declare-fun uub$ (A_a_fun$) A_a_real_fun_fun$)
(declare-fun uuc$ (A_real_fun$ Real) A_real_fun$)
(declare-fun uud$ (Real_real_fun$) Real_real_real_fun_fun$)
(declare-fun uue$ (Real_a_fun$ A$) Real_real_fun$)
(declare-fun uuf$ (A_a_fun$) A_a_real_fun_fun$)
(declare-fun uug$ (A_real_fun$ Real) A_real_fun$)
(declare-fun uuh$ (Real_real_fun$) Real_real_real_fun_fun$)
(declare-fun uui$ (Real_a_fun$ A$) Real_real_fun$)
(declare-fun uuj$ (A_real_fun$) A_a_a_fun_fun$)
(declare-fun uuk$ (A_real_fun$ Real) A_real_fun$)
(declare-fun uul$ (Real_real_fun$) Real_real_real_fun_fun$)
(declare-fun uum$ (Real_real_fun$ A$) Real_a_fun$)
(declare-fun uun$ (A_real_fun$ Real_real_fun$) A_real_fun$)
(declare-fun uuo$ (A_real_fun$ Real_a_fun$) A_a_fun$)
(declare-fun uup$ (A_a_fun$ A_a_fun$) A_a_fun$)
(declare-fun uuq$ (A_a_fun$ A_real_fun$) A_real_fun$)
(declare-fun uur$ (Real_a_fun$ A_real_fun$) Real_real_fun$)
(declare-fun uus$ (Real_a_fun$ A_a_fun$) Real_a_fun$)
(declare-fun uut$ (Real_real_fun$ Real_a_fun$) Real_a_fun$)
(declare-fun uuu$ (Real_real_fun$ Real_real_fun$) Real_real_fun$)
(declare-fun top$a () A_set$)
(declare-fun basis$ () A_set$)
(declare-fun inner$ () A_a_real_fun_fun$)
(declare-fun basis$a () Real_set$)
(declare-fun inner$a () Real_real_real_fun_fun$)
(declare-fun member$ (A$ A_set$) Bool)
(declare-fun scaleR$ () Real_real_real_fun_fun$)
(declare-fun thesis$ () Bool)
(declare-fun fun_app$ (Real_real_fun$ Real) Real)
(declare-fun member$a (Real Real_set$) Bool)
(declare-fun scaleR$a (Real) A_a_fun$)
(declare-fun fun_app$a (A_real_fun$ A$) Real)
(declare-fun fun_app$b (A_a_real_fun_fun$ A$) A_real_fun$)
(declare-fun fun_app$c (Real_a_fun$ Real) A$)
(declare-fun fun_app$d (Real_real_real_fun_fun$ Real) Real_real_fun$)
(declare-fun fun_app$e (A_a_fun$ A$) A$)
(declare-fun fun_app$f (A_a_a_fun_fun$ A$) A_a_fun$)
(declare-fun fun_app$g (Real_real_a_fun_fun$ Real) Real_a_fun$)
(declare-fun at_within$ (Real Real_set$) Real_filter$)
(declare-fun at_within$a (A$ A_set$) A_filter$)
(declare-fun continuous_on$ (Real_set$ Real_a_fun$) Bool)
(declare-fun continuous_on$a (Real_set$ Real_real_fun$) Bool)
(declare-fun continuous_on$b (A_set$ A_a_fun$) Bool)
(declare-fun continuous_on$c (A_set$ A_real_fun$) Bool)
(declare-fun has_derivative$ (Real_real_fun$ Real_real_fun$ Real_filter$) Bool)
(declare-fun has_derivative$a (A_a_fun$ A_a_fun$ A_filter$) Bool)
(declare-fun has_derivative$b (A_real_fun$ A_real_fun$ A_filter$) Bool)
(declare-fun has_derivative$c (Real_a_fun$ Real_a_fun$ Real_filter$) Bool)
(declare-fun c1_differentiable_on$ (Real_real_fun$ Real_set$) Bool)
(assert (! (forall ((?v0 A$) (?v1 Real)) (! (= (fun_app$ (uu$ ?v0) ?v1) (fun_app$a (fun_app$b inner$ (fun_app$c f$ ?v1)) ?v0)) :pattern ((fun_app$ (uu$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real)) (! (= (fun_app$ (fun_app$d (uul$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$d scaleR$ (fun_app$ ?v0 ?v2)) ?v1)) :pattern ((fun_app$ (fun_app$d (uul$ ?v0) ?v1) ?v2)))) :named a1))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 A$) (?v2 Real)) (! (= (fun_app$c (uum$ ?v0 ?v1) ?v2) (fun_app$e (scaleR$a (fun_app$ ?v0 ?v2)) ?v1)) :pattern ((fun_app$c (uum$ ?v0 ?v1) ?v2)))) :named a2))
(assert (! (forall ((?v0 A_real_fun$) (?v1 Real) (?v2 A$)) (! (= (fun_app$a (uuk$ ?v0 ?v1) ?v2) (fun_app$ (fun_app$d scaleR$ (fun_app$a ?v0 ?v2)) ?v1)) :pattern ((fun_app$a (uuk$ ?v0 ?v1) ?v2)))) :named a3))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A$) (?v2 A$)) (! (= (fun_app$e (fun_app$f (uuj$ ?v0) ?v1) ?v2) (fun_app$e (scaleR$a (fun_app$a ?v0 ?v2)) ?v1)) :pattern ((fun_app$e (fun_app$f (uuj$ ?v0) ?v1) ?v2)))) :named a4))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real)) (! (= (fun_app$ (fun_app$d (uud$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$d inner$a (fun_app$ ?v0 ?v2)) ?v1)) :pattern ((fun_app$ (fun_app$d (uud$ ?v0) ?v1) ?v2)))) :named a5))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 A$) (?v2 Real)) (! (= (fun_app$ (uue$ ?v0 ?v1) ?v2) (fun_app$a (fun_app$b inner$ (fun_app$c ?v0 ?v2)) ?v1)) :pattern ((fun_app$ (uue$ ?v0 ?v1) ?v2)))) :named a6))
(assert (! (forall ((?v0 A_real_fun$) (?v1 Real) (?v2 A$)) (! (= (fun_app$a (uuc$ ?v0 ?v1) ?v2) (fun_app$ (fun_app$d inner$a (fun_app$a ?v0 ?v2)) ?v1)) :pattern ((fun_app$a (uuc$ ?v0 ?v1) ?v2)))) :named a7))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$) (?v2 A$)) (! (= (fun_app$a (fun_app$b (uub$ ?v0) ?v1) ?v2) (fun_app$a (fun_app$b inner$ (fun_app$e ?v0 ?v2)) ?v1)) :pattern ((fun_app$a (fun_app$b (uub$ ?v0) ?v1) ?v2)))) :named a8))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real)) (! (= (fun_app$ (fun_app$d (uuh$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$d inner$a ?v1) (fun_app$ ?v0 ?v2))) :pattern ((fun_app$ (fun_app$d (uuh$ ?v0) ?v1) ?v2)))) :named a9))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 A$) (?v2 Real)) (! (= (fun_app$ (uui$ ?v0 ?v1) ?v2) (fun_app$a (fun_app$b inner$ ?v1) (fun_app$c ?v0 ?v2))) :pattern ((fun_app$ (uui$ ?v0 ?v1) ?v2)))) :named a10))
(assert (! (forall ((?v0 A_real_fun$) (?v1 Real) (?v2 A$)) (! (= (fun_app$a (uug$ ?v0 ?v1) ?v2) (fun_app$ (fun_app$d inner$a ?v1) (fun_app$a ?v0 ?v2))) :pattern ((fun_app$a (uug$ ?v0 ?v1) ?v2)))) :named a11))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$) (?v2 A$)) (! (= (fun_app$a (fun_app$b (uuf$ ?v0) ?v1) ?v2) (fun_app$a (fun_app$b inner$ ?v1) (fun_app$e ?v0 ?v2))) :pattern ((fun_app$a (fun_app$b (uuf$ ?v0) ?v1) ?v2)))) :named a12))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real)) (! (= (fun_app$ (uuu$ ?v0 ?v1) ?v2) (fun_app$ ?v1 (fun_app$ ?v0 ?v2))) :pattern ((fun_app$ (uuu$ ?v0 ?v1) ?v2)))) :named a13))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_a_fun$) (?v2 Real)) (! (= (fun_app$c (uut$ ?v0 ?v1) ?v2) (fun_app$c ?v1 (fun_app$ ?v0 ?v2))) :pattern ((fun_app$c (uut$ ?v0 ?v1) ?v2)))) :named a14))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 A_real_fun$) (?v2 Real)) (! (= (fun_app$ (uur$ ?v0 ?v1) ?v2) (fun_app$a ?v1 (fun_app$c ?v0 ?v2))) :pattern ((fun_app$ (uur$ ?v0 ?v1) ?v2)))) :named a15))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 A_a_fun$) (?v2 Real)) (! (= (fun_app$c (uus$ ?v0 ?v1) ?v2) (fun_app$e ?v1 (fun_app$c ?v0 ?v2))) :pattern ((fun_app$c (uus$ ?v0 ?v1) ?v2)))) :named a16))
(assert (! (forall ((?v0 A_real_fun$) (?v1 Real_real_fun$) (?v2 A$)) (! (= (fun_app$a (uun$ ?v0 ?v1) ?v2) (fun_app$ ?v1 (fun_app$a ?v0 ?v2))) :pattern ((fun_app$a (uun$ ?v0 ?v1) ?v2)))) :named a17))
(assert (! (forall ((?v0 A_real_fun$) (?v1 Real_a_fun$) (?v2 A$)) (! (= (fun_app$e (uuo$ ?v0 ?v1) ?v2) (fun_app$c ?v1 (fun_app$a ?v0 ?v2))) :pattern ((fun_app$e (uuo$ ?v0 ?v1) ?v2)))) :named a18))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_real_fun$) (?v2 A$)) (! (= (fun_app$a (uuq$ ?v0 ?v1) ?v2) (fun_app$a ?v1 (fun_app$e ?v0 ?v2))) :pattern ((fun_app$a (uuq$ ?v0 ?v1) ?v2)))) :named a19))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$e (uup$ ?v0 ?v1) ?v2) (fun_app$e ?v1 (fun_app$e ?v0 ?v2))) :pattern ((fun_app$e (uup$ ?v0 ?v1) ?v2)))) :named a20))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 A$) (?v2 Real) (?v3 Real)) (! (= (fun_app$ (fun_app$d (uua$ ?v0 ?v1) ?v2) ?v3) (fun_app$a (fun_app$b inner$ (fun_app$e (scaleR$a ?v3) (fun_app$c ?v0 ?v2))) ?v1)) :pattern ((fun_app$ (fun_app$d (uua$ ?v0 ?v1) ?v2) ?v3)))) :named a21))
(assert (! (not thesis$) :named a22))
(assert (! (forall ((?v0 Real_a_fun$)) (=> (forall ((?v1 A$)) (=> (member$ ?v1 basis$) (forall ((?v2 Real)) (=> (member$a ?v2 s$) (and (has_derivative$ (uu$ ?v1) (fun_app$d (uua$ ?v0 ?v1) ?v2) (at_within$ ?v2 top$)) (continuous_on$ s$ ?v0)))))) thesis$)) :named a23))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (fun_app$d scaleR$ ?v2) (fun_app$ (fun_app$d inner$a ?v0) ?v1)) (fun_app$ (fun_app$d inner$a (fun_app$ (fun_app$d scaleR$ ?v2) ?v0)) ?v1))) :named a24))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 Real)) (= (fun_app$ (fun_app$d scaleR$ ?v2) (fun_app$a (fun_app$b inner$ ?v0) ?v1)) (fun_app$a (fun_app$b inner$ (fun_app$e (scaleR$a ?v2) ?v0)) ?v1))) :named a25))
(assert (! (exists ((?v0 Real_a_fun$)) (forall ((?v1 A$)) (=> (member$ ?v1 basis$) (forall ((?v2 Real)) (=> (member$a ?v2 s$) (and (has_derivative$ (uu$ ?v1) (fun_app$d (uua$ ?v0 ?v1) ?v2) (at_within$ ?v2 top$)) (continuous_on$ s$ ?v0))))))) :named a26))
(assert (! (forall ((?v0 A$)) (=> (member$ ?v0 basis$) (c1_differentiable_on$ (uu$ ?v0) s$))) :named a27))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_set$)) (= (has_derivative$a ?v0 ?v1 (at_within$a ?v2 ?v3)) (forall ((?v4 A$)) (=> (member$ ?v4 basis$) (has_derivative$b (fun_app$b (uub$ ?v0) ?v4) (fun_app$b (uub$ ?v1) ?v4) (at_within$a ?v2 ?v3)))))) :named a28))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_real_fun$) (?v2 A$) (?v3 A_set$)) (= (has_derivative$b ?v0 ?v1 (at_within$a ?v2 ?v3)) (forall ((?v4 Real)) (=> (member$a ?v4 basis$a) (has_derivative$b (uuc$ ?v0 ?v4) (uuc$ ?v1 ?v4) (at_within$a ?v2 ?v3)))))) :named a29))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real) (?v3 Real_set$)) (= (has_derivative$ ?v0 ?v1 (at_within$ ?v2 ?v3)) (forall ((?v4 Real)) (=> (member$a ?v4 basis$a) (has_derivative$ (fun_app$d (uud$ ?v0) ?v4) (fun_app$d (uud$ ?v1) ?v4) (at_within$ ?v2 ?v3)))))) :named a30))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_a_fun$) (?v2 Real) (?v3 Real_set$)) (= (has_derivative$c ?v0 ?v1 (at_within$ ?v2 ?v3)) (forall ((?v4 A$)) (=> (member$ ?v4 basis$) (has_derivative$ (uue$ ?v0 ?v4) (uue$ ?v1 ?v4) (at_within$ ?v2 ?v3)))))) :named a31))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A_filter$) (?v3 A$)) (=> (has_derivative$a ?v0 ?v1 ?v2) (has_derivative$b (fun_app$b (uub$ ?v0) ?v3) (fun_app$b (uub$ ?v1) ?v3) ?v2))) :named a32))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_real_fun$) (?v2 A_filter$) (?v3 Real)) (=> (has_derivative$b ?v0 ?v1 ?v2) (has_derivative$b (uuc$ ?v0 ?v3) (uuc$ ?v1 ?v3) ?v2))) :named a33))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real_filter$) (?v3 Real)) (=> (has_derivative$ ?v0 ?v1 ?v2) (has_derivative$ (fun_app$d (uud$ ?v0) ?v3) (fun_app$d (uud$ ?v1) ?v3) ?v2))) :named a34))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_a_fun$) (?v2 Real_filter$) (?v3 A$)) (=> (has_derivative$c ?v0 ?v1 ?v2) (has_derivative$ (uue$ ?v0 ?v3) (uue$ ?v1 ?v3) ?v2))) :named a35))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A_filter$) (?v3 A$)) (=> (has_derivative$a ?v0 ?v1 ?v2) (has_derivative$b (fun_app$b (uuf$ ?v0) ?v3) (fun_app$b (uuf$ ?v1) ?v3) ?v2))) :named a36))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_real_fun$) (?v2 A_filter$) (?v3 Real)) (=> (has_derivative$b ?v0 ?v1 ?v2) (has_derivative$b (uug$ ?v0 ?v3) (uug$ ?v1 ?v3) ?v2))) :named a37))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real_filter$) (?v3 Real)) (=> (has_derivative$ ?v0 ?v1 ?v2) (has_derivative$ (fun_app$d (uuh$ ?v0) ?v3) (fun_app$d (uuh$ ?v1) ?v3) ?v2))) :named a38))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_a_fun$) (?v2 Real_filter$) (?v3 A$)) (=> (has_derivative$c ?v0 ?v1 ?v2) (has_derivative$ (uui$ ?v0 ?v3) (uui$ ?v1 ?v3) ?v2))) :named a39))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_real_fun$) (?v2 A_filter$) (?v3 A$)) (=> (has_derivative$b ?v0 ?v1 ?v2) (has_derivative$a (fun_app$f (uuj$ ?v0) ?v3) (fun_app$f (uuj$ ?v1) ?v3) ?v2))) :named a40))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_real_fun$) (?v2 A_filter$) (?v3 Real)) (=> (has_derivative$b ?v0 ?v1 ?v2) (has_derivative$b (uuk$ ?v0 ?v3) (uuk$ ?v1 ?v3) ?v2))) :named a41))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real_filter$) (?v3 Real)) (=> (has_derivative$ ?v0 ?v1 ?v2) (has_derivative$ (fun_app$d (uul$ ?v0) ?v3) (fun_app$d (uul$ ?v1) ?v3) ?v2))) :named a42))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real_filter$) (?v3 A$)) (=> (has_derivative$ ?v0 ?v1 ?v2) (has_derivative$c (uum$ ?v0 ?v3) (uum$ ?v1 ?v3) ?v2))) :named a43))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_real_fun$)) (= (continuous_on$a ?v0 ?v1) (forall ((?v2 Real)) (=> (member$a ?v2 basis$a) (continuous_on$a ?v0 (fun_app$d (uud$ ?v1) ?v2)))))) :named a44))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_a_fun$)) (= (continuous_on$ ?v0 ?v1) (forall ((?v2 A$)) (=> (member$ ?v2 basis$) (continuous_on$a ?v0 (uue$ ?v1 ?v2)))))) :named a45))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_real_fun$) (?v2 A$) (?v3 A_set$) (?v4 Real_real_fun$) (?v5 Real_real_fun$)) (=> (and (has_derivative$b ?v0 ?v1 (at_within$a ?v2 ?v3)) (has_derivative$ ?v4 ?v5 (at_within$ (fun_app$a ?v0 ?v2) top$))) (has_derivative$b (uun$ ?v0 ?v4) (uun$ ?v1 ?v5) (at_within$a ?v2 ?v3)))) :named a46))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_real_fun$) (?v2 A$) (?v3 A_set$) (?v4 Real_a_fun$) (?v5 Real_a_fun$)) (=> (and (has_derivative$b ?v0 ?v1 (at_within$a ?v2 ?v3)) (has_derivative$c ?v4 ?v5 (at_within$ (fun_app$a ?v0 ?v2) top$))) (has_derivative$a (uuo$ ?v0 ?v4) (uuo$ ?v1 ?v5) (at_within$a ?v2 ?v3)))) :named a47))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_set$) (?v4 A_a_fun$) (?v5 A_a_fun$)) (=> (and (has_derivative$a ?v0 ?v1 (at_within$a ?v2 ?v3)) (has_derivative$a ?v4 ?v5 (at_within$a (fun_app$e ?v0 ?v2) top$a))) (has_derivative$a (uup$ ?v0 ?v4) (uup$ ?v1 ?v5) (at_within$a ?v2 ?v3)))) :named a48))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_set$) (?v4 A_real_fun$) (?v5 A_real_fun$)) (=> (and (has_derivative$a ?v0 ?v1 (at_within$a ?v2 ?v3)) (has_derivative$b ?v4 ?v5 (at_within$a (fun_app$e ?v0 ?v2) top$a))) (has_derivative$b (uuq$ ?v0 ?v4) (uuq$ ?v1 ?v5) (at_within$a ?v2 ?v3)))) :named a49))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_a_fun$) (?v2 Real) (?v3 Real_set$) (?v4 A_real_fun$) (?v5 A_real_fun$)) (=> (and (has_derivative$c ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_derivative$b ?v4 ?v5 (at_within$a (fun_app$c ?v0 ?v2) top$a))) (has_derivative$ (uur$ ?v0 ?v4) (uur$ ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a50))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_a_fun$) (?v2 Real) (?v3 Real_set$) (?v4 A_a_fun$) (?v5 A_a_fun$)) (=> (and (has_derivative$c ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_derivative$a ?v4 ?v5 (at_within$a (fun_app$c ?v0 ?v2) top$a))) (has_derivative$c (uus$ ?v0 ?v4) (uus$ ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a51))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real) (?v3 Real_set$) (?v4 Real_a_fun$) (?v5 Real_a_fun$)) (=> (and (has_derivative$ ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_derivative$c ?v4 ?v5 (at_within$ (fun_app$ ?v0 ?v2) top$))) (has_derivative$c (uut$ ?v0 ?v4) (uut$ ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a52))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real) (?v3 Real_set$) (?v4 Real_real_fun$) (?v5 Real_real_fun$)) (=> (and (has_derivative$ ?v0 ?v1 (at_within$ ?v2 ?v3)) (has_derivative$ ?v4 ?v5 (at_within$ (fun_app$ ?v0 ?v2) top$))) (has_derivative$ (uuu$ ?v0 ?v4) (uuu$ ?v1 ?v5) (at_within$ ?v2 ?v3)))) :named a53))
(assert (! (forall ((?v0 A_set$) (?v1 A_a_fun$) (?v2 A_a_a_fun_fun$)) (=> (forall ((?v3 A$)) (=> (member$ ?v3 ?v0) (has_derivative$a ?v1 (fun_app$f ?v2 ?v3) (at_within$a ?v3 ?v0)))) (continuous_on$b ?v0 ?v1))) :named a54))
(assert (! (forall ((?v0 A_set$) (?v1 A_real_fun$) (?v2 A_a_real_fun_fun$)) (=> (forall ((?v3 A$)) (=> (member$ ?v3 ?v0) (has_derivative$b ?v1 (fun_app$b ?v2 ?v3) (at_within$a ?v3 ?v0)))) (continuous_on$c ?v0 ?v1))) :named a55))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_real_fun$) (?v2 Real_real_real_fun_fun$)) (=> (forall ((?v3 Real)) (=> (member$a ?v3 ?v0) (has_derivative$ ?v1 (fun_app$d ?v2 ?v3) (at_within$ ?v3 ?v0)))) (continuous_on$a ?v0 ?v1))) :named a56))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_a_fun$) (?v2 Real_real_a_fun_fun$)) (=> (forall ((?v3 Real)) (=> (member$a ?v3 ?v0) (has_derivative$c ?v1 (fun_app$g ?v2 ?v3) (at_within$ ?v3 ?v0)))) (continuous_on$ ?v0 ?v1))) :named a57))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_a_fun$)) (=> (and (has_derivative$a ?v0 ?v1 (at_within$a ?v2 top$a)) (has_derivative$a ?v0 ?v3 (at_within$a ?v2 top$a))) (= ?v1 ?v3))) :named a58))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_real_fun$) (?v2 A$) (?v3 A_real_fun$)) (=> (and (has_derivative$b ?v0 ?v1 (at_within$a ?v2 top$a)) (has_derivative$b ?v0 ?v3 (at_within$a ?v2 top$a))) (= ?v1 ?v3))) :named a59))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_a_fun$) (?v2 Real) (?v3 Real_a_fun$)) (=> (and (has_derivative$c ?v0 ?v1 (at_within$ ?v2 top$)) (has_derivative$c ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a60))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real) (?v3 Real_real_fun$)) (=> (and (has_derivative$ ?v0 ?v1 (at_within$ ?v2 top$)) (has_derivative$ ?v0 ?v3 (at_within$ ?v2 top$))) (= ?v1 ?v3))) :named a61))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_a_fun$)) (=> (and (has_derivative$a ?v0 ?v1 (at_within$a ?v2 top$a)) (= ?v1 ?v3)) (has_derivative$a ?v0 ?v3 (at_within$a ?v2 top$a)))) :named a62))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_real_fun$) (?v2 A$) (?v3 A_real_fun$)) (=> (and (has_derivative$b ?v0 ?v1 (at_within$a ?v2 top$a)) (= ?v1 ?v3)) (has_derivative$b ?v0 ?v3 (at_within$a ?v2 top$a)))) :named a63))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_a_fun$) (?v2 Real) (?v3 Real_a_fun$)) (=> (and (has_derivative$c ?v0 ?v1 (at_within$ ?v2 top$)) (= ?v1 ?v3)) (has_derivative$c ?v0 ?v3 (at_within$ ?v2 top$)))) :named a64))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real) (?v3 Real_real_fun$)) (=> (and (has_derivative$ ?v0 ?v1 (at_within$ ?v2 top$)) (= ?v1 ?v3)) (has_derivative$ ?v0 ?v3 (at_within$ ?v2 top$)))) :named a65))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_set$)) (=> (has_derivative$a ?v0 ?v1 (at_within$a ?v2 top$a)) (has_derivative$a ?v0 ?v1 (at_within$a ?v2 ?v3)))) :named a66))
(assert (! (forall ((?v0 A_real_fun$) (?v1 A_real_fun$) (?v2 A$) (?v3 A_set$)) (=> (has_derivative$b ?v0 ?v1 (at_within$a ?v2 top$a)) (has_derivative$b ?v0 ?v1 (at_within$a ?v2 ?v3)))) :named a67))
(assert (! (forall ((?v0 Real_a_fun$) (?v1 Real_a_fun$) (?v2 Real) (?v3 Real_set$)) (=> (has_derivative$c ?v0 ?v1 (at_within$ ?v2 top$)) (has_derivative$c ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a68))
(assert (! (forall ((?v0 Real_real_fun$) (?v1 Real_real_fun$) (?v2 Real) (?v3 Real_set$)) (=> (has_derivative$ ?v0 ?v1 (at_within$ ?v2 top$)) (has_derivative$ ?v0 ?v1 (at_within$ ?v2 ?v3)))) :named a69))
(check-sat)
;;;;(get-proof)
