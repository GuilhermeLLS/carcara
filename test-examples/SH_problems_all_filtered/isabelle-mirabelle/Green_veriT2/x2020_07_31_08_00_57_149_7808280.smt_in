; --index-fresh-sorts --proof-version=2 --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIRA)
(declare-sort Real_set$ 0)
(declare-sort Real_set_set$ 0)
(declare-sort Real_bool_fun$ 0)
(declare-sort Real_set_set_set$ 0)
(declare-sort Real_set_bool_fun$ 0)
(declare-sort Real_real_set_prod$ 0)
(declare-sort Real_set_set_set_set$ 0)
(declare-sort Real_set_set_bool_fun$ 0)
(declare-sort Real_real_bool_fun_fun$ 0)
(declare-sort Real_real_set_prod_set$ 0)
(declare-sort Real_set_set_set_bool_fun$ 0)
(declare-sort Real_real_set_bool_fun_fun$ 0)
(declare-sort Real_real_set_prod_set_set$ 0)
(declare-sort Real_set_real_bool_fun_fun$ 0)
(declare-sort Real_real_set_prod_bool_fun$ 0)
(declare-sort Real_real_set_prod_set_set_set$ 0)
(declare-sort Real_set_real_set_bool_fun_fun$ 0)
(declare-sort Real_real_set_prod_set_bool_fun$ 0)
(declare-sort Real_real_set_prod_set_set_set_set$ 0)
(declare-sort Real_real_set_prod_set_set_bool_fun$ 0)
(declare-sort Real_real_real_set_prod_bool_fun_fun$ 0)
(declare-sort Real_real_set_prod_real_bool_fun_fun$ 0)
(declare-sort Real_real_set_prod_set_set_set_bool_fun$ 0)
(declare-sort Real_real_set_prod_real_set_bool_fun_fun$ 0)
(declare-sort Real_real_set_prod_set_real_bool_fun_fun$ 0)
(declare-sort Real_set_real_real_set_prod_bool_fun_fun$ 0)
(declare-sort Real_real_set_prod_real_real_set_prod_bool_fun_fun$ 0)
(declare-fun a$ () Real)
(declare-fun b$ () Real)
(declare-fun f$ (Real_real_set_prod$) Real)
(declare-fun p$ () Real_real_set_prod_set$)
(declare-fun s$ () Real_set$)
(declare-fun uu$ () Real_real_set_prod_bool_fun$)
(declare-fun bot$ () Real_set$)
(declare-fun inf$ (Real_set$ Real_set$) Real_set$)
(declare-fun snd$ (Real_real_set_prod$) Real_set$)
(declare-fun sup$ (Real_set_set$) Real_set$)
(declare-fun uua$ () Real_set_bool_fun$)
(declare-fun uub$ (Real_bool_fun$ Real_real_bool_fun_fun$) Real_bool_fun$)
(declare-fun uuc$ (Real_real_bool_fun_fun$) Real_real_bool_fun_fun$)
(declare-fun uud$ (Real_set_bool_fun$ Real_real_set_bool_fun_fun$) Real_bool_fun$)
(declare-fun uue$ (Real_real_set_bool_fun_fun$) Real_set_real_bool_fun_fun$)
(declare-fun uuf$ (Real_bool_fun$ Real_set_real_bool_fun_fun$) Real_set_bool_fun$)
(declare-fun uug$ (Real_set_real_bool_fun_fun$) Real_real_set_bool_fun_fun$)
(declare-fun uuh$ (Real_set_bool_fun$ Real_set_real_set_bool_fun_fun$) Real_set_bool_fun$)
(declare-fun uui$ (Real_set_real_set_bool_fun_fun$) Real_set_real_set_bool_fun_fun$)
(declare-fun uuj$ (Real_real_set_prod_bool_fun$ Real_real_real_set_prod_bool_fun_fun$) Real_bool_fun$)
(declare-fun uuk$ (Real_real_real_set_prod_bool_fun_fun$) Real_real_set_prod_real_bool_fun_fun$)
(declare-fun uul$ (Real_bool_fun$ Real_real_set_prod_real_bool_fun_fun$) Real_real_set_prod_bool_fun$)
(declare-fun uum$ (Real_real_set_prod_real_bool_fun_fun$) Real_real_real_set_prod_bool_fun_fun$)
(declare-fun uun$ (Real_set_bool_fun$ Real_real_set_prod_real_set_bool_fun_fun$) Real_real_set_prod_bool_fun$)
(declare-fun uuo$ (Real_real_set_prod_real_set_bool_fun_fun$) Real_set_real_real_set_prod_bool_fun_fun$)
(declare-fun uup$ (Real_real_set_prod_bool_fun$ Real_set_real_real_set_prod_bool_fun_fun$) Real_set_bool_fun$)
(declare-fun uuq$ (Real_set_real_real_set_prod_bool_fun_fun$) Real_real_set_prod_real_set_bool_fun_fun$)
(declare-fun uur$ (Real_real_set_prod_bool_fun$ Real_real_set_prod_real_real_set_prod_bool_fun_fun$) Real_real_set_prod_bool_fun$)
(declare-fun uus$ (Real_real_set_prod_real_real_set_prod_bool_fun_fun$) Real_real_set_prod_real_real_set_prod_bool_fun_fun$)
(declare-fun uut$ (Real_bool_fun$ Real_real_set_prod_set_real_bool_fun_fun$) Real_real_set_prod_set_bool_fun$)
(declare-fun uuu$ (Real_real_set_prod_set_real_bool_fun_fun$ Real) Real_real_set_prod_set_bool_fun$)
(declare-fun uuv$ (Real_real_set_prod_set_set_set$) Real_real_set_prod_set_set_set_bool_fun$)
(declare-fun uuw$ (Real_set_set_set$) Real_set_set_set_bool_fun$)
(declare-fun uux$ (Real_real_set_prod_set_set$) Real_real_set_prod_set_set_bool_fun$)
(declare-fun uuy$ (Real_set_set$) Real_set_set_bool_fun$)
(declare-fun uuz$ (Real_real_set_prod_set$) Real_real_set_prod_set_bool_fun$)
(declare-fun uva$ () Real_set_real_set_bool_fun_fun$)
(declare-fun bot$a () Real_set_set_set_set$)
(declare-fun bot$b () Real_set_set_set$)
(declare-fun bot$c () Real_real_set_prod_set_set_set$)
(declare-fun bot$d () Real_real_set_prod_set_set$)
(declare-fun bot$e () Real_real_set_prod_set$)
(declare-fun bot$f () Real_set_set$)
(declare-fun pair$ (Real Real_set$) Real_real_set_prod$)
(declare-fun sup$a (Real_real_set_prod_set_set_set$) Real_real_set_prod_set_set$)
(declare-fun sup$b (Real_set_set_set_set$) Real_set_set_set$)
(declare-fun sup$c (Real_set_set_set$) Real_set_set$)
(declare-fun sup$d (Real_real_set_prod_set_set$) Real_real_set_prod_set$)
(declare-fun sup$e (Real_real_set_prod_set$) Real_real_set_prod$)
(declare-fun sup$f (Real_set$) Real)
(declare-fun finite$ (Real_real_set_prod_set$) Bool)
(declare-fun member$ (Real_real_set_prod$ Real_real_set_prod_set$) Bool)
(declare-fun collect$ (Real_real_set_prod_bool_fun$) Real_real_set_prod_set$)
(declare-fun finite$a () Real_set_bool_fun$)
(declare-fun finite$b (Real_set_set$) Bool)
(declare-fun finite$c (Real_real_set_prod_set_set$) Bool)
(declare-fun finite$d (Real_real_set_prod_set_set_set$) Bool)
(declare-fun finite$e (Real_real_set_prod_set_set_set_set$) Bool)
(declare-fun finite$f (Real_set_set_set$) Bool)
(declare-fun finite$g (Real_set_set_set_set$) Bool)
(declare-fun fun_app$ (Real_set_bool_fun$ Real_set$) Bool)
(declare-fun less_eq$ (Real_real_set_prod_set$ Real_real_set_prod_set$) Bool)
(declare-fun member$a () Real_real_set_bool_fun_fun$)
(declare-fun collect$a (Real_set_bool_fun$) Real_set_set$)
(declare-fun collect$b (Real_bool_fun$) Real_set$)
(declare-fun collect$c (Real_real_set_prod_set_bool_fun$) Real_real_set_prod_set_set$)
(declare-fun collect$d (Real_real_set_prod_set_set_set_bool_fun$) Real_real_set_prod_set_set_set_set$)
(declare-fun collect$e (Real_set_set_set_bool_fun$) Real_set_set_set_set$)
(declare-fun collect$f (Real_real_set_prod_set_set_bool_fun$) Real_real_set_prod_set_set_set$)
(declare-fun collect$g (Real_set_set_bool_fun$) Real_set_set_set$)
(declare-fun fun_app$a (Real_real_set_prod_bool_fun$ Real_real_set_prod$) Bool)
(declare-fun fun_app$b (Real_real_set_prod_set_bool_fun$ Real_real_set_prod_set$) Bool)
(declare-fun fun_app$c (Real_set_real_set_bool_fun_fun$ Real_set$) Real_set_bool_fun$)
(declare-fun fun_app$d (Real_real_set_prod_set_set_bool_fun$ Real_real_set_prod_set_set$) Bool)
(declare-fun fun_app$e (Real_set_set_bool_fun$ Real_set_set$) Bool)
(declare-fun fun_app$f (Real_real_set_prod_set_set_set_bool_fun$ Real_real_set_prod_set_set_set$) Bool)
(declare-fun fun_app$g (Real_set_set_set_bool_fun$ Real_set_set_set$) Bool)
(declare-fun fun_app$h (Real_real_set_prod_real_real_set_prod_bool_fun_fun$ Real_real_set_prod$) Real_real_set_prod_bool_fun$)
(declare-fun fun_app$i (Real_real_real_set_prod_bool_fun_fun$ Real) Real_real_set_prod_bool_fun$)
(declare-fun fun_app$j (Real_bool_fun$ Real) Bool)
(declare-fun fun_app$k (Real_real_set_prod_real_bool_fun_fun$ Real_real_set_prod$) Real_bool_fun$)
(declare-fun fun_app$l (Real_set_real_real_set_prod_bool_fun_fun$ Real_set$) Real_real_set_prod_bool_fun$)
(declare-fun fun_app$m (Real_real_set_prod_real_set_bool_fun_fun$ Real_real_set_prod$) Real_set_bool_fun$)
(declare-fun fun_app$n (Real_real_bool_fun_fun$ Real) Real_bool_fun$)
(declare-fun fun_app$o (Real_set_real_bool_fun_fun$ Real_set$) Real_bool_fun$)
(declare-fun fun_app$p (Real_real_set_bool_fun_fun$ Real) Real_set_bool_fun$)
(declare-fun fun_app$q (Real_real_set_prod_set_real_bool_fun_fun$ Real_real_set_prod_set$) Real_bool_fun$)
(declare-fun interior$ (Real_set$) Real_set$)
(declare-fun less_eq$a () Real_set_real_set_bool_fun_fun$)
(declare-fun less_eq$b (Real_real_set_prod_set_set$ Real_real_set_prod_set_set$) Bool)
(declare-fun less_eq$c (Real_set_set$ Real_set_set$) Bool)
(declare-fun less_eq$d (Real_real_set_prod_set_set_set$ Real_real_set_prod_set_set_set$) Bool)
(declare-fun less_eq$e (Real_set_set_set$ Real_set_set_set$) Bool)
(declare-fun less_eq$f () Real_real_set_prod_real_real_set_prod_bool_fun_fun$)
(declare-fun less_eq$g (Real_set_set_set_set$ Real_set_set_set_set$) Bool)
(declare-fun atLeastAtMost$ (Real Real) Real_set$)
(declare-fun atLeastAtMost$a (Real_real_set_prod_set_set$ Real_real_set_prod_set_set$) Real_real_set_prod_set_set_set$)
(declare-fun atLeastAtMost$b (Real_set_set_set$ Real_set_set_set$) Real_set_set_set_set$)
(declare-fun atLeastAtMost$c (Real_set_set$ Real_set_set$) Real_set_set_set$)
(declare-fun atLeastAtMost$d (Real_real_set_prod_set$ Real_real_set_prod_set$) Real_real_set_prod_set_set$)
(declare-fun atLeastAtMost$e (Real_set$ Real_set$) Real_set_set$)
(declare-fun atLeastAtMost$f (Real_real_set_prod$ Real_real_set_prod$) Real_real_set_prod_set$)
(declare-fun tagged_division_of$ (Real_real_set_prod_set$) Real_set_bool_fun$)
(assert (! (forall ((?v0 Real_set$)) (! (= (fun_app$ uua$ ?v0) (exists ((?v1 Real)) (member$ (pair$ ?v1 ?v0) p$))) :pattern ((fun_app$ uua$ ?v0)))) :named a0))
(assert (! (forall ((?v0 Real_real_set_prod$)) (! (= (fun_app$a uu$ ?v0) (exists ((?v1 Real) (?v2 Real_set$)) (and (= ?v0 (pair$ (f$ (pair$ ?v1 ?v2)) ?v2)) (member$ (pair$ ?v1 ?v2) p$)))) :pattern ((fun_app$a uu$ ?v0)))) :named a1))
(assert (! (forall ((?v0 Real_real_set_prod_set$) (?v1 Real_real_set_prod_set$)) (! (= (fun_app$b (uuz$ ?v0) ?v1) (less_eq$ ?v1 ?v0)) :pattern ((fun_app$b (uuz$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set$)) (! (= (fun_app$ (fun_app$c uva$ ?v0) ?v1) (fun_app$ (fun_app$c less_eq$a ?v1) ?v0)) :pattern ((fun_app$ (fun_app$c uva$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 Real_real_set_prod_set_set$) (?v1 Real_real_set_prod_set_set$)) (! (= (fun_app$d (uux$ ?v0) ?v1) (less_eq$b ?v1 ?v0)) :pattern ((fun_app$d (uux$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set$)) (! (= (fun_app$e (uuy$ ?v0) ?v1) (less_eq$c ?v1 ?v0)) :pattern ((fun_app$e (uuy$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 Real_real_set_prod_set_set_set$) (?v1 Real_real_set_prod_set_set_set$)) (! (= (fun_app$f (uuv$ ?v0) ?v1) (less_eq$d ?v1 ?v0)) :pattern ((fun_app$f (uuv$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set$)) (! (= (fun_app$g (uuw$ ?v0) ?v1) (less_eq$e ?v1 ?v0)) :pattern ((fun_app$g (uuw$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 Real_real_set_prod_real_real_set_prod_bool_fun_fun$) (?v1 Real_real_set_prod$) (?v2 Real_real_set_prod$)) (! (= (fun_app$a (fun_app$h (uus$ ?v0) ?v1) ?v2) (fun_app$a (fun_app$h ?v0 ?v2) ?v1)) :pattern ((fun_app$a (fun_app$h (uus$ ?v0) ?v1) ?v2)))) :named a8))
(assert (! (forall ((?v0 Real_real_set_prod_real_bool_fun_fun$) (?v1 Real) (?v2 Real_real_set_prod$)) (! (= (fun_app$a (fun_app$i (uum$ ?v0) ?v1) ?v2) (fun_app$j (fun_app$k ?v0 ?v2) ?v1)) :pattern ((fun_app$a (fun_app$i (uum$ ?v0) ?v1) ?v2)))) :named a9))
(assert (! (forall ((?v0 Real_real_set_prod_real_set_bool_fun_fun$) (?v1 Real_set$) (?v2 Real_real_set_prod$)) (! (= (fun_app$a (fun_app$l (uuo$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$m ?v0 ?v2) ?v1)) :pattern ((fun_app$a (fun_app$l (uuo$ ?v0) ?v1) ?v2)))) :named a10))
(assert (! (forall ((?v0 Real_real_real_set_prod_bool_fun_fun$) (?v1 Real_real_set_prod$) (?v2 Real)) (! (= (fun_app$j (fun_app$k (uuk$ ?v0) ?v1) ?v2) (fun_app$a (fun_app$i ?v0 ?v2) ?v1)) :pattern ((fun_app$j (fun_app$k (uuk$ ?v0) ?v1) ?v2)))) :named a11))
(assert (! (forall ((?v0 Real_real_bool_fun_fun$) (?v1 Real) (?v2 Real)) (! (= (fun_app$j (fun_app$n (uuc$ ?v0) ?v1) ?v2) (fun_app$j (fun_app$n ?v0 ?v2) ?v1)) :pattern ((fun_app$j (fun_app$n (uuc$ ?v0) ?v1) ?v2)))) :named a12))
(assert (! (forall ((?v0 Real_real_set_bool_fun_fun$) (?v1 Real_set$) (?v2 Real)) (! (= (fun_app$j (fun_app$o (uue$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$p ?v0 ?v2) ?v1)) :pattern ((fun_app$j (fun_app$o (uue$ ?v0) ?v1) ?v2)))) :named a13))
(assert (! (forall ((?v0 Real_real_set_prod_set_real_bool_fun_fun$) (?v1 Real) (?v2 Real_real_set_prod_set$)) (! (= (fun_app$b (uuu$ ?v0 ?v1) ?v2) (fun_app$j (fun_app$q ?v0 ?v2) ?v1)) :pattern ((fun_app$b (uuu$ ?v0 ?v1) ?v2)))) :named a14))
(assert (! (forall ((?v0 Real_set_real_real_set_prod_bool_fun_fun$) (?v1 Real_real_set_prod$) (?v2 Real_set$)) (! (= (fun_app$ (fun_app$m (uuq$ ?v0) ?v1) ?v2) (fun_app$a (fun_app$l ?v0 ?v2) ?v1)) :pattern ((fun_app$ (fun_app$m (uuq$ ?v0) ?v1) ?v2)))) :named a15))
(assert (! (forall ((?v0 Real_set_real_bool_fun_fun$) (?v1 Real) (?v2 Real_set$)) (! (= (fun_app$ (fun_app$p (uug$ ?v0) ?v1) ?v2) (fun_app$j (fun_app$o ?v0 ?v2) ?v1)) :pattern ((fun_app$ (fun_app$p (uug$ ?v0) ?v1) ?v2)))) :named a16))
(assert (! (forall ((?v0 Real_set_real_set_bool_fun_fun$) (?v1 Real_set$) (?v2 Real_set$)) (! (= (fun_app$ (fun_app$c (uui$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$c ?v0 ?v2) ?v1)) :pattern ((fun_app$ (fun_app$c (uui$ ?v0) ?v1) ?v2)))) :named a17))
(assert (! (forall ((?v0 Real_real_set_prod_bool_fun$) (?v1 Real_real_set_prod_real_real_set_prod_bool_fun_fun$) (?v2 Real_real_set_prod$)) (! (= (fun_app$a (uur$ ?v0 ?v1) ?v2) (exists ((?v3 Real_real_set_prod$)) (and (fun_app$a ?v0 ?v3) (fun_app$a (fun_app$h ?v1 ?v2) ?v3)))) :pattern ((fun_app$a (uur$ ?v0 ?v1) ?v2)))) :named a18))
(assert (! (forall ((?v0 Real_real_set_prod_bool_fun$) (?v1 Real_real_real_set_prod_bool_fun_fun$) (?v2 Real)) (! (= (fun_app$j (uuj$ ?v0 ?v1) ?v2) (exists ((?v3 Real_real_set_prod$)) (and (fun_app$a ?v0 ?v3) (fun_app$a (fun_app$i ?v1 ?v2) ?v3)))) :pattern ((fun_app$j (uuj$ ?v0 ?v1) ?v2)))) :named a19))
(assert (! (forall ((?v0 Real_real_set_prod_bool_fun$) (?v1 Real_set_real_real_set_prod_bool_fun_fun$) (?v2 Real_set$)) (! (= (fun_app$ (uup$ ?v0 ?v1) ?v2) (exists ((?v3 Real_real_set_prod$)) (and (fun_app$a ?v0 ?v3) (fun_app$a (fun_app$l ?v1 ?v2) ?v3)))) :pattern ((fun_app$ (uup$ ?v0 ?v1) ?v2)))) :named a20))
(assert (! (forall ((?v0 Real_bool_fun$) (?v1 Real_real_set_prod_real_bool_fun_fun$) (?v2 Real_real_set_prod$)) (! (= (fun_app$a (uul$ ?v0 ?v1) ?v2) (exists ((?v3 Real)) (and (fun_app$j ?v0 ?v3) (fun_app$j (fun_app$k ?v1 ?v2) ?v3)))) :pattern ((fun_app$a (uul$ ?v0 ?v1) ?v2)))) :named a21))
(assert (! (forall ((?v0 Real_bool_fun$) (?v1 Real_real_bool_fun_fun$) (?v2 Real)) (! (= (fun_app$j (uub$ ?v0 ?v1) ?v2) (exists ((?v3 Real)) (and (fun_app$j ?v0 ?v3) (fun_app$j (fun_app$n ?v1 ?v2) ?v3)))) :pattern ((fun_app$j (uub$ ?v0 ?v1) ?v2)))) :named a22))
(assert (! (forall ((?v0 Real_bool_fun$) (?v1 Real_real_set_prod_set_real_bool_fun_fun$) (?v2 Real_real_set_prod_set$)) (! (= (fun_app$b (uut$ ?v0 ?v1) ?v2) (exists ((?v3 Real)) (and (fun_app$j ?v0 ?v3) (fun_app$j (fun_app$q ?v1 ?v2) ?v3)))) :pattern ((fun_app$b (uut$ ?v0 ?v1) ?v2)))) :named a23))
(assert (! (forall ((?v0 Real_bool_fun$) (?v1 Real_set_real_bool_fun_fun$) (?v2 Real_set$)) (! (= (fun_app$ (uuf$ ?v0 ?v1) ?v2) (exists ((?v3 Real)) (and (fun_app$j ?v0 ?v3) (fun_app$j (fun_app$o ?v1 ?v2) ?v3)))) :pattern ((fun_app$ (uuf$ ?v0 ?v1) ?v2)))) :named a24))
(assert (! (forall ((?v0 Real_set_bool_fun$) (?v1 Real_real_set_prod_real_set_bool_fun_fun$) (?v2 Real_real_set_prod$)) (! (= (fun_app$a (uun$ ?v0 ?v1) ?v2) (exists ((?v3 Real_set$)) (and (fun_app$ ?v0 ?v3) (fun_app$ (fun_app$m ?v1 ?v2) ?v3)))) :pattern ((fun_app$a (uun$ ?v0 ?v1) ?v2)))) :named a25))
(assert (! (forall ((?v0 Real_set_bool_fun$) (?v1 Real_real_set_bool_fun_fun$) (?v2 Real)) (! (= (fun_app$j (uud$ ?v0 ?v1) ?v2) (exists ((?v3 Real_set$)) (and (fun_app$ ?v0 ?v3) (fun_app$ (fun_app$p ?v1 ?v2) ?v3)))) :pattern ((fun_app$j (uud$ ?v0 ?v1) ?v2)))) :named a26))
(assert (! (forall ((?v0 Real_set_bool_fun$) (?v1 Real_set_real_set_bool_fun_fun$) (?v2 Real_set$)) (! (= (fun_app$ (uuh$ ?v0 ?v1) ?v2) (exists ((?v3 Real_set$)) (and (fun_app$ ?v0 ?v3) (fun_app$ (fun_app$c ?v1 ?v2) ?v3)))) :pattern ((fun_app$ (uuh$ ?v0 ?v1) ?v2)))) :named a27))
(assert (! (not (finite$ (collect$ uu$))) :named a28))
(assert (! (forall ((?v0 Real_real_set_prod$)) (=> (member$ ?v0 p$) (and (not (fun_app$ (fun_app$p member$a (f$ ?v0)) s$)) (fun_app$ (fun_app$p member$a (f$ ?v0)) (snd$ ?v0))))) :named a29))
(assert (! (finite$ p$) :named a30))
(assert (! (forall ((?v0 Real) (?v1 Real_set$)) (=> (member$ (pair$ ?v0 ?v1) p$) (and (fun_app$ (fun_app$p member$a ?v0) ?v1) (and (fun_app$ (fun_app$c less_eq$a ?v1) (atLeastAtMost$ a$ b$)) (exists ((?v2 Real) (?v3 Real)) (= ?v1 (atLeastAtMost$ ?v2 ?v3))))))) :named a31))
(assert (! (forall ((?v0 Real) (?v1 Real_set$) (?v2 Real) (?v3 Real_set$)) (=> (and (member$ (pair$ ?v0 ?v1) p$) (and (member$ (pair$ ?v2 ?v3) p$) (=> (= ?v0 ?v2) (not (= ?v1 ?v3))))) (= (inf$ (interior$ ?v1) (interior$ ?v3)) bot$))) :named a32))
(assert (! (= (sup$ (collect$a uua$)) (atLeastAtMost$ a$ b$)) :named a33))
(assert (! (fun_app$ finite$a s$) :named a34))
(assert (! (finite$ (collect$ uu$)) :named a35))
(assert (! (fun_app$ (tagged_division_of$ p$) (atLeastAtMost$ a$ b$)) :named a36))
(assert (! (forall ((?v0 Real_real_set_prod_set_set$) (?v1 Real_real_set_prod_set_set$)) (=> (less_eq$b ?v0 ?v1) (= (sup$a (atLeastAtMost$a ?v0 ?v1)) ?v1))) :named a37))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set$)) (=> (less_eq$e ?v0 ?v1) (= (sup$b (atLeastAtMost$b ?v0 ?v1)) ?v1))) :named a38))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set$)) (=> (less_eq$c ?v0 ?v1) (= (sup$c (atLeastAtMost$c ?v0 ?v1)) ?v1))) :named a39))
(assert (! (forall ((?v0 Real_real_set_prod_set$) (?v1 Real_real_set_prod_set$)) (=> (less_eq$ ?v0 ?v1) (= (sup$d (atLeastAtMost$d ?v0 ?v1)) ?v1))) :named a40))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set$)) (=> (fun_app$ (fun_app$c less_eq$a ?v0) ?v1) (= (sup$ (atLeastAtMost$e ?v0 ?v1)) ?v1))) :named a41))
(assert (! (forall ((?v0 Real_real_set_prod_set_set$) (?v1 Real_real_set_prod_set_set$)) (=> (less_eq$b ?v0 ?v1) (= (sup$a (atLeastAtMost$a ?v0 ?v1)) ?v1))) :named a42))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set$)) (=> (less_eq$e ?v0 ?v1) (= (sup$b (atLeastAtMost$b ?v0 ?v1)) ?v1))) :named a43))
(assert (! (forall ((?v0 Real_real_set_prod$) (?v1 Real_real_set_prod$)) (=> (fun_app$a (fun_app$h less_eq$f ?v0) ?v1) (= (sup$e (atLeastAtMost$f ?v0 ?v1)) ?v1))) :named a44))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set$)) (=> (less_eq$c ?v0 ?v1) (= (sup$c (atLeastAtMost$c ?v0 ?v1)) ?v1))) :named a45))
(assert (! (forall ((?v0 Real_real_set_prod_set$) (?v1 Real_real_set_prod_set$)) (=> (less_eq$ ?v0 ?v1) (= (sup$d (atLeastAtMost$d ?v0 ?v1)) ?v1))) :named a46))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set$)) (=> (fun_app$ (fun_app$c less_eq$a ?v0) ?v1) (= (sup$ (atLeastAtMost$e ?v0 ?v1)) ?v1))) :named a47))
(assert (! (forall ((?v0 Real) (?v1 Real)) (=> (<= ?v0 ?v1) (= (sup$f (atLeastAtMost$ ?v0 ?v1)) ?v1))) :named a48))
(assert (! (= (sup$b bot$a) bot$b) :named a49))
(assert (! (= (sup$a bot$c) bot$d) :named a50))
(assert (! (= (sup$d bot$d) bot$e) :named a51))
(assert (! (= (sup$c bot$b) bot$f) :named a52))
(assert (! (= (sup$ bot$f) bot$) :named a53))
(assert (! (= (sup$b bot$a) bot$b) :named a54))
(assert (! (= (sup$a bot$c) bot$d) :named a55))
(assert (! (= (sup$d bot$d) bot$e) :named a56))
(assert (! (= (sup$c bot$b) bot$f) :named a57))
(assert (! (= (sup$ bot$f) bot$) :named a58))
(assert (! (forall ((?v0 Real_real_set_prod_set_set$) (?v1 Real_real_set_prod_set_set$)) (= (= (atLeastAtMost$a ?v0 ?v1) bot$c) (not (less_eq$b ?v0 ?v1)))) :named a59))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set$)) (= (= (atLeastAtMost$b ?v0 ?v1) bot$a) (not (less_eq$e ?v0 ?v1)))) :named a60))
(assert (! (forall ((?v0 Real_real_set_prod$) (?v1 Real_real_set_prod$)) (= (= (atLeastAtMost$f ?v0 ?v1) bot$e) (not (fun_app$a (fun_app$h less_eq$f ?v0) ?v1)))) :named a61))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set$)) (= (= (atLeastAtMost$c ?v0 ?v1) bot$b) (not (less_eq$c ?v0 ?v1)))) :named a62))
(assert (! (forall ((?v0 Real_real_set_prod_set$) (?v1 Real_real_set_prod_set$)) (= (= (atLeastAtMost$d ?v0 ?v1) bot$d) (not (less_eq$ ?v0 ?v1)))) :named a63))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set$)) (= (= (atLeastAtMost$e ?v0 ?v1) bot$f) (not (fun_app$ (fun_app$c less_eq$a ?v0) ?v1)))) :named a64))
(assert (! (forall ((?v0 Real) (?v1 Real)) (= (= (atLeastAtMost$ ?v0 ?v1) bot$) (not (<= ?v0 ?v1)))) :named a65))
(assert (! (forall ((?v0 Real_real_set_prod_set_set$) (?v1 Real_real_set_prod_set_set$)) (= (= bot$c (atLeastAtMost$a ?v0 ?v1)) (not (less_eq$b ?v0 ?v1)))) :named a66))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set$)) (= (= bot$a (atLeastAtMost$b ?v0 ?v1)) (not (less_eq$e ?v0 ?v1)))) :named a67))
(assert (! (forall ((?v0 Real_real_set_prod$) (?v1 Real_real_set_prod$)) (= (= bot$e (atLeastAtMost$f ?v0 ?v1)) (not (fun_app$a (fun_app$h less_eq$f ?v0) ?v1)))) :named a68))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set$)) (= (= bot$b (atLeastAtMost$c ?v0 ?v1)) (not (less_eq$c ?v0 ?v1)))) :named a69))
(assert (! (forall ((?v0 Real_real_set_prod_set$) (?v1 Real_real_set_prod_set$)) (= (= bot$d (atLeastAtMost$d ?v0 ?v1)) (not (less_eq$ ?v0 ?v1)))) :named a70))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set$)) (= (= bot$f (atLeastAtMost$e ?v0 ?v1)) (not (fun_app$ (fun_app$c less_eq$a ?v0) ?v1)))) :named a71))
(assert (! (forall ((?v0 Real) (?v1 Real)) (= (= bot$ (atLeastAtMost$ ?v0 ?v1)) (not (<= ?v0 ?v1)))) :named a72))
(assert (! (forall ((?v0 Real_real_set_prod_set_set$) (?v1 Real_real_set_prod_set_set$)) (! (=> (not (less_eq$b ?v0 ?v1)) (= (atLeastAtMost$a ?v0 ?v1) bot$c)) :pattern ((atLeastAtMost$a ?v0 ?v1)))) :named a73))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set$)) (! (=> (not (less_eq$e ?v0 ?v1)) (= (atLeastAtMost$b ?v0 ?v1) bot$a)) :pattern ((atLeastAtMost$b ?v0 ?v1)))) :named a74))
(assert (! (forall ((?v0 Real_real_set_prod$) (?v1 Real_real_set_prod$)) (! (=> (not (fun_app$a (fun_app$h less_eq$f ?v0) ?v1)) (= (atLeastAtMost$f ?v0 ?v1) bot$e)) :pattern ((atLeastAtMost$f ?v0 ?v1)))) :named a75))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set$)) (! (=> (not (less_eq$c ?v0 ?v1)) (= (atLeastAtMost$c ?v0 ?v1) bot$b)) :pattern ((atLeastAtMost$c ?v0 ?v1)))) :named a76))
(assert (! (forall ((?v0 Real_real_set_prod_set$) (?v1 Real_real_set_prod_set$)) (! (=> (not (less_eq$ ?v0 ?v1)) (= (atLeastAtMost$d ?v0 ?v1) bot$d)) :pattern ((atLeastAtMost$d ?v0 ?v1)))) :named a77))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set$)) (! (=> (not (fun_app$ (fun_app$c less_eq$a ?v0) ?v1)) (= (atLeastAtMost$e ?v0 ?v1) bot$f)) :pattern ((atLeastAtMost$e ?v0 ?v1)))) :named a78))
(assert (! (forall ((?v0 Real) (?v1 Real)) (! (=> (not (<= ?v0 ?v1)) (= (atLeastAtMost$ ?v0 ?v1) bot$)) :pattern ((atLeastAtMost$ ?v0 ?v1)))) :named a79))
(assert (! (forall ((?v0 Real_real_set_prod_set_set$) (?v1 Real_real_set_prod_set_set$) (?v2 Real_real_set_prod_set_set$) (?v3 Real_real_set_prod_set_set$)) (= (less_eq$d (atLeastAtMost$a ?v0 ?v1) (atLeastAtMost$a ?v2 ?v3)) (or (not (less_eq$b ?v0 ?v1)) (and (less_eq$b ?v2 ?v0) (less_eq$b ?v1 ?v3))))) :named a80))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set$) (?v2 Real_set_set_set$) (?v3 Real_set_set_set$)) (= (less_eq$g (atLeastAtMost$b ?v0 ?v1) (atLeastAtMost$b ?v2 ?v3)) (or (not (less_eq$e ?v0 ?v1)) (and (less_eq$e ?v2 ?v0) (less_eq$e ?v1 ?v3))))) :named a81))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set$) (?v2 Real_set_set$) (?v3 Real_set_set$)) (= (less_eq$e (atLeastAtMost$c ?v0 ?v1) (atLeastAtMost$c ?v2 ?v3)) (or (not (less_eq$c ?v0 ?v1)) (and (less_eq$c ?v2 ?v0) (less_eq$c ?v1 ?v3))))) :named a82))
(assert (! (forall ((?v0 Real_real_set_prod_set$) (?v1 Real_real_set_prod_set$) (?v2 Real_real_set_prod_set$) (?v3 Real_real_set_prod_set$)) (= (less_eq$b (atLeastAtMost$d ?v0 ?v1) (atLeastAtMost$d ?v2 ?v3)) (or (not (less_eq$ ?v0 ?v1)) (and (less_eq$ ?v2 ?v0) (less_eq$ ?v1 ?v3))))) :named a83))
(assert (! (forall ((?v0 Real_real_set_prod$) (?v1 Real_real_set_prod$) (?v2 Real_real_set_prod$) (?v3 Real_real_set_prod$)) (= (less_eq$ (atLeastAtMost$f ?v0 ?v1) (atLeastAtMost$f ?v2 ?v3)) (or (not (fun_app$a (fun_app$h less_eq$f ?v0) ?v1)) (and (fun_app$a (fun_app$h less_eq$f ?v2) ?v0) (fun_app$a (fun_app$h less_eq$f ?v1) ?v3))))) :named a84))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set$) (?v2 Real_set$) (?v3 Real_set$)) (= (less_eq$c (atLeastAtMost$e ?v0 ?v1) (atLeastAtMost$e ?v2 ?v3)) (or (not (fun_app$ (fun_app$c less_eq$a ?v0) ?v1)) (and (fun_app$ (fun_app$c less_eq$a ?v2) ?v0) (fun_app$ (fun_app$c less_eq$a ?v1) ?v3))))) :named a85))
(assert (! (forall ((?v0 Real) (?v1 Real) (?v2 Real) (?v3 Real)) (= (fun_app$ (fun_app$c less_eq$a (atLeastAtMost$ ?v0 ?v1)) (atLeastAtMost$ ?v2 ?v3)) (or (not (<= ?v0 ?v1)) (and (<= ?v2 ?v0) (<= ?v1 ?v3))))) :named a86))
(assert (! (forall ((?v0 Real_bool_fun$) (?v1 Real_real_bool_fun_fun$)) (=> (fun_app$ finite$a (collect$b ?v0)) (= (fun_app$ finite$a (collect$b (uub$ ?v0 ?v1))) (forall ((?v2 Real)) (=> (fun_app$j ?v0 ?v2) (fun_app$ finite$a (collect$b (fun_app$n (uuc$ ?v1) ?v2)))))))) :named a87))
(assert (! (forall ((?v0 Real_set_bool_fun$) (?v1 Real_real_set_bool_fun_fun$)) (=> (finite$b (collect$a ?v0)) (= (fun_app$ finite$a (collect$b (uud$ ?v0 ?v1))) (forall ((?v2 Real_set$)) (=> (fun_app$ ?v0 ?v2) (fun_app$ finite$a (collect$b (fun_app$o (uue$ ?v1) ?v2)))))))) :named a88))
(assert (! (forall ((?v0 Real_bool_fun$) (?v1 Real_set_real_bool_fun_fun$)) (=> (fun_app$ finite$a (collect$b ?v0)) (= (finite$b (collect$a (uuf$ ?v0 ?v1))) (forall ((?v2 Real)) (=> (fun_app$j ?v0 ?v2) (finite$b (collect$a (fun_app$p (uug$ ?v1) ?v2)))))))) :named a89))
(assert (! (forall ((?v0 Real_set_bool_fun$) (?v1 Real_set_real_set_bool_fun_fun$)) (=> (finite$b (collect$a ?v0)) (= (finite$b (collect$a (uuh$ ?v0 ?v1))) (forall ((?v2 Real_set$)) (=> (fun_app$ ?v0 ?v2) (finite$b (collect$a (fun_app$c (uui$ ?v1) ?v2)))))))) :named a90))
(assert (! (forall ((?v0 Real_real_set_prod_bool_fun$) (?v1 Real_real_real_set_prod_bool_fun_fun$)) (=> (finite$ (collect$ ?v0)) (= (fun_app$ finite$a (collect$b (uuj$ ?v0 ?v1))) (forall ((?v2 Real_real_set_prod$)) (=> (fun_app$a ?v0 ?v2) (fun_app$ finite$a (collect$b (fun_app$k (uuk$ ?v1) ?v2)))))))) :named a91))
(assert (! (forall ((?v0 Real_bool_fun$) (?v1 Real_real_set_prod_real_bool_fun_fun$)) (=> (fun_app$ finite$a (collect$b ?v0)) (= (finite$ (collect$ (uul$ ?v0 ?v1))) (forall ((?v2 Real)) (=> (fun_app$j ?v0 ?v2) (finite$ (collect$ (fun_app$i (uum$ ?v1) ?v2)))))))) :named a92))
(assert (! (forall ((?v0 Real_set_bool_fun$) (?v1 Real_real_set_prod_real_set_bool_fun_fun$)) (=> (finite$b (collect$a ?v0)) (= (finite$ (collect$ (uun$ ?v0 ?v1))) (forall ((?v2 Real_set$)) (=> (fun_app$ ?v0 ?v2) (finite$ (collect$ (fun_app$l (uuo$ ?v1) ?v2)))))))) :named a93))
(assert (! (forall ((?v0 Real_real_set_prod_bool_fun$) (?v1 Real_set_real_real_set_prod_bool_fun_fun$)) (=> (finite$ (collect$ ?v0)) (= (finite$b (collect$a (uup$ ?v0 ?v1))) (forall ((?v2 Real_real_set_prod$)) (=> (fun_app$a ?v0 ?v2) (finite$b (collect$a (fun_app$m (uuq$ ?v1) ?v2)))))))) :named a94))
(assert (! (forall ((?v0 Real_real_set_prod_bool_fun$) (?v1 Real_real_set_prod_real_real_set_prod_bool_fun_fun$)) (=> (finite$ (collect$ ?v0)) (= (finite$ (collect$ (uur$ ?v0 ?v1))) (forall ((?v2 Real_real_set_prod$)) (=> (fun_app$a ?v0 ?v2) (finite$ (collect$ (fun_app$h (uus$ ?v1) ?v2)))))))) :named a95))
(assert (! (forall ((?v0 Real_bool_fun$) (?v1 Real_real_set_prod_set_real_bool_fun_fun$)) (=> (fun_app$ finite$a (collect$b ?v0)) (= (finite$c (collect$c (uut$ ?v0 ?v1))) (forall ((?v2 Real)) (=> (fun_app$j ?v0 ?v2) (finite$c (collect$c (uuu$ ?v1 ?v2)))))))) :named a96))
(assert (! (forall ((?v0 Real_real_set_prod_set_set_set$)) (=> (finite$d ?v0) (finite$e (collect$d (uuv$ ?v0))))) :named a97))
(assert (! (forall ((?v0 Real_set_set_set$)) (=> (finite$f ?v0) (finite$g (collect$e (uuw$ ?v0))))) :named a98))
(assert (! (forall ((?v0 Real_real_set_prod_set_set$)) (=> (finite$c ?v0) (finite$d (collect$f (uux$ ?v0))))) :named a99))
(assert (! (forall ((?v0 Real_set_set$)) (=> (finite$b ?v0) (finite$f (collect$g (uuy$ ?v0))))) :named a100))
(assert (! (forall ((?v0 Real_real_set_prod_set$)) (=> (finite$ ?v0) (finite$c (collect$c (uuz$ ?v0))))) :named a101))
(assert (! (forall ((?v0 Real_set$)) (=> (fun_app$ finite$a ?v0) (finite$b (collect$a (fun_app$c uva$ ?v0))))) :named a102))
(check-sat)
;;;;(get-proof)
