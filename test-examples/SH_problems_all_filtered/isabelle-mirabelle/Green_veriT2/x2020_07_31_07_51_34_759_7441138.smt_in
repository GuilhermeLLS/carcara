; --index-fresh-sorts --proof-version=2 --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIRA)
(declare-sort Real_set$ 0)
(declare-sort Real_set_set$ 0)
(declare-sort Real_set_set_set$ 0)
(declare-sort Real_set_set_set_set$ 0)
(declare-sort Real_set_set_set_set_set$ 0)
(declare-fun a$ () Real)
(declare-fun b$ () Real)
(declare-fun s$ () Real_set_set$)
(declare-fun x$ () Real)
(declare-fun bot$ () Real_set$)
(declare-fun sup$ (Real_set_set$) Real_set$)
(declare-fun sup$a (Real_set$ Real_set$) Real_set$)
(declare-fun sup$b (Real_set_set_set_set_set$) Real_set_set_set_set$)
(declare-fun sup$c (Real_set_set_set_set$) Real_set_set_set$)
(declare-fun sup$d (Real_set_set_set$) Real_set_set$)
(declare-fun sup$e (Real_set_set_set_set$ Real_set_set_set_set$) Real_set_set_set_set$)
(declare-fun sup$f (Real_set_set_set$ Real_set_set_set$) Real_set_set_set$)
(declare-fun sup$g (Real_set_set$ Real_set_set$) Real_set_set$)
(declare-fun finite$ (Real_set_set$) Bool)
(declare-fun insert$ (Real Real_set$) Real_set$)
(declare-fun member$ (Real_set$ Real_set_set$) Bool)
(declare-fun finite$a (Real_set_set_set_set_set$) Bool)
(declare-fun finite$b (Real_set_set_set_set$) Bool)
(declare-fun finite$c (Real_set_set_set$) Bool)
(declare-fun finite$d (Real_set$) Bool)
(declare-fun insert$a (Real_set_set_set$ Real_set_set_set_set$) Real_set_set_set_set$)
(declare-fun insert$b (Real_set_set$ Real_set_set_set$) Real_set_set_set$)
(declare-fun insert$c (Real_set$ Real_set_set$) Real_set_set$)
(declare-fun member$a (Real Real_set$) Bool)
(declare-fun member$b (Real_set_set_set_set$ Real_set_set_set_set_set$) Bool)
(declare-fun member$c (Real_set_set_set$ Real_set_set_set_set$) Bool)
(declare-fun member$d (Real_set_set$ Real_set_set_set$) Bool)
(declare-fun atLeastAtMost$ (Real Real) Real_set$)
(assert (! (not (finite$ s$)) :named a0))
(assert (! (forall ((?v0 Real_set$)) (=> (member$ ?v0 s$) (exists ((?v1 Real) (?v2 Real)) (and (< ?v1 ?v2) (= (atLeastAtMost$ ?v1 ?v2) ?v0))))) :named a1))
(assert (! (not (exists ((?v0 Real_set$)) (and (member$ ?v0 s$) (member$a x$ ?v0)))) :named a2))
(assert (! (finite$ s$) :named a3))
(assert (! (forall ((?v0 Real_set$)) (=> (member$ ?v0 s$) (not (member$a x$ ?v0)))) :named a4))
(assert (! (not (member$a x$ (sup$ s$))) :named a5))
(assert (! (= (sup$a (insert$ x$ bot$) (sup$ s$)) (atLeastAtMost$ a$ b$)) :named a6))
(assert (! (forall ((?v0 Real_set_set_set_set_set$)) (=> (and (finite$a ?v0) (forall ((?v1 Real_set_set_set_set$)) (=> (member$b ?v1 ?v0) (finite$b ?v1)))) (finite$b (sup$b ?v0)))) :named a7))
(assert (! (forall ((?v0 Real_set_set_set_set$)) (=> (and (finite$b ?v0) (forall ((?v1 Real_set_set_set$)) (=> (member$c ?v1 ?v0) (finite$c ?v1)))) (finite$c (sup$c ?v0)))) :named a8))
(assert (! (forall ((?v0 Real_set_set_set$)) (=> (and (finite$c ?v0) (forall ((?v1 Real_set_set$)) (=> (member$d ?v1 ?v0) (finite$ ?v1)))) (finite$ (sup$d ?v0)))) :named a9))
(assert (! (forall ((?v0 Real_set_set$)) (=> (and (finite$ ?v0) (forall ((?v1 Real_set$)) (=> (member$ ?v1 ?v0) (finite$d ?v1)))) (finite$d (sup$ ?v0)))) :named a10))
(assert (! (forall ((?v0 Real_set_set_set_set_set$)) (=> (finite$b (sup$b ?v0)) (finite$a ?v0))) :named a11))
(assert (! (forall ((?v0 Real_set_set_set_set$)) (=> (finite$c (sup$c ?v0)) (finite$b ?v0))) :named a12))
(assert (! (forall ((?v0 Real_set_set_set$)) (=> (finite$ (sup$d ?v0)) (finite$c ?v0))) :named a13))
(assert (! (forall ((?v0 Real_set_set$)) (=> (finite$d (sup$ ?v0)) (finite$ ?v0))) :named a14))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set_set$)) (= (finite$b (insert$a ?v0 ?v1)) (finite$b ?v1))) :named a15))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set_set$)) (= (finite$c (insert$b ?v0 ?v1)) (finite$c ?v1))) :named a16))
(assert (! (forall ((?v0 Real) (?v1 Real_set$)) (= (finite$d (insert$ ?v0 ?v1)) (finite$d ?v1))) :named a17))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set_set$)) (= (finite$ (insert$c ?v0 ?v1)) (finite$ ?v1))) :named a18))
(assert (! (forall ((?v0 Real_set_set_set_set$) (?v1 Real_set_set_set_set$)) (= (finite$b (sup$e ?v0 ?v1)) (and (finite$b ?v0) (finite$b ?v1)))) :named a19))
(assert (! (forall ((?v0 Real_set_set_set$) (?v1 Real_set_set_set$)) (= (finite$c (sup$f ?v0 ?v1)) (and (finite$c ?v0) (finite$c ?v1)))) :named a20))
(assert (! (forall ((?v0 Real_set_set$) (?v1 Real_set_set$)) (= (finite$ (sup$g ?v0 ?v1)) (and (finite$ ?v0) (finite$ ?v1)))) :named a21))
(assert (! (forall ((?v0 Real_set$) (?v1 Real_set$)) (= (finite$d (sup$a ?v0 ?v1)) (and (finite$d ?v0) (finite$d ?v1)))) :named a22))
(check-sat)
;;;;(get-proof)
