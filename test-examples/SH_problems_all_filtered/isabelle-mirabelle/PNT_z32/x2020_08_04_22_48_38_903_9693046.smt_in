; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --multi-trigger-linear --no-statistics --random-seed=1 --lang=smt2 --continued-execution --tlimit 30000
(set-option :produce-unsat-cores true)
(set-logic AUFLIRA)
(declare-sort Nat$ 0)
(declare-sort Real_set$ 0)
(declare-fun n$ () Nat$)
(declare-fun x$ () Real)
(declare-fun nat$ (Int) Nat$)
(declare-fun one$ () Nat$)
(declare-fun suc$ (Nat$) Nat$)
(declare-fun floor$ (Real) Int)
(declare-fun minus$ (Nat$ Nat$) Nat$)
(declare-fun member$ (Real Real_set$) Bool)
(declare-fun of_nat$ (Nat$) Real)
(declare-fun nth_prime$ (Nat$) Nat$)
(declare-fun primes_pi$ (Real) Real)
(declare-fun atLeastLessThan$ (Real Real) Real_set$)
(assert (! (not (member$ x$ (atLeastLessThan$ (of_nat$ (nth_prime$ (minus$ (nat$ (floor$ (primes_pi$ x$))) one$))) (of_nat$ (nth_prime$ (nat$ (floor$ (primes_pi$ x$)))))))) :named a0))
(assert (! (member$ x$ (atLeastLessThan$ (of_nat$ (nth_prime$ n$)) (of_nat$ (nth_prime$ (suc$ n$))))) :named a1))
(assert (! (= (suc$ n$) (nat$ (floor$ (primes_pi$ x$)))) :named a2))
(assert (! (= n$ (minus$ (nat$ (floor$ (primes_pi$ x$))) one$)) :named a3))
(check-sat)
(get-unsat-core)
