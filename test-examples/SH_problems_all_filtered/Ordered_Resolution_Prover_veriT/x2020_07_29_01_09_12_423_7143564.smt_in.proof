(assume a0 (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))))
(assume a1 (not (lnull$ xs$)))
(assume a2 (not (less$ (enat$ k$) (llength$ xs$))))
(assume a3 (= (liminf_upto_llist$ xs$ (enat$ k$)) (llast$ xs$)))
(step t5 (cl (= (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) (and (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) (ite (less$ (enat$ k$) (llength$ xs$)) (= (lnth$ xs$ k$) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (= (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (ite (lnull$ xs$) (= bot$ (ite (lnull$ xs$) bot$ (llast$ xs$))) (= (llast$ xs$) (ite (lnull$ xs$) bot$ (llast$ xs$))))))) :rule ite_intro)
(step t6 (cl (not (= (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) (and (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) (ite (less$ (enat$ k$) (llength$ xs$)) (= (lnth$ xs$ k$) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (= (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (ite (lnull$ xs$) (= bot$ (ite (lnull$ xs$) bot$ (llast$ xs$))) (= (llast$ xs$) (ite (lnull$ xs$) bot$ (llast$ xs$))))))) (not (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$)))))) (and (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) (ite (less$ (enat$ k$) (llength$ xs$)) (= (lnth$ xs$ k$) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (= (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (ite (lnull$ xs$) (= bot$ (ite (lnull$ xs$) bot$ (llast$ xs$))) (= (llast$ xs$) (ite (lnull$ xs$) bot$ (llast$ xs$)))))) :rule equiv_pos2)
(step t7 (cl (not (not (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))))) (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) :rule not_not)
(step t8 (cl (not (= (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) (and (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) (ite (less$ (enat$ k$) (llength$ xs$)) (= (lnth$ xs$ k$) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (= (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (ite (lnull$ xs$) (= bot$ (ite (lnull$ xs$) bot$ (llast$ xs$))) (= (llast$ xs$) (ite (lnull$ xs$) bot$ (llast$ xs$))))))) (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (and (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) (ite (less$ (enat$ k$) (llength$ xs$)) (= (lnth$ xs$ k$) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (= (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (ite (lnull$ xs$) (= bot$ (ite (lnull$ xs$) bot$ (llast$ xs$))) (= (llast$ xs$) (ite (lnull$ xs$) bot$ (llast$ xs$)))))) :rule th_resolution :premises (t7 t6))
(step t9 (cl (and (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) (ite (less$ (enat$ k$) (llength$ xs$)) (= (lnth$ xs$ k$) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (= (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (ite (lnull$ xs$) (= bot$ (ite (lnull$ xs$) bot$ (llast$ xs$))) (= (llast$ xs$) (ite (lnull$ xs$) bot$ (llast$ xs$)))))) :rule th_resolution :premises (a0 t5 t8))
(step t10 (cl (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$)))))) :rule and :premises (t9))
(step t11 (cl (ite (less$ (enat$ k$) (llength$ xs$)) (= (lnth$ xs$ k$) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (= (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))) (ite (lnull$ xs$) bot$ (llast$ xs$))))) :rule and :premises (t9))
(step t12 (cl (less$ (enat$ k$) (llength$ xs$)) (= (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))) (ite (lnull$ xs$) bot$ (llast$ xs$)))) :rule ite1 :premises (t11))
(step t13 (cl (ite (lnull$ xs$) (= bot$ (ite (lnull$ xs$) bot$ (llast$ xs$))) (= (llast$ xs$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) :rule and :premises (t9))
(step t14 (cl (lnull$ xs$) (= (llast$ xs$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) :rule ite1 :premises (t13))
(step t15 (cl (= (llast$ xs$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) :rule resolution :premises (t14 a1))
(step t16 (cl (= (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))) (ite (lnull$ xs$) bot$ (llast$ xs$)))) :rule resolution :premises (t12 a2))
(step t17 (cl (not (= (liminf_upto_llist$ xs$ (enat$ k$)) (llast$ xs$))) (not (= (llast$ xs$) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (not (= (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))) (ite (lnull$ xs$) bot$ (llast$ xs$)))) (= (liminf_upto_llist$ xs$ (enat$ k$)) (ite (less$ (enat$ k$) (llength$ xs$)) (lnth$ xs$ k$) (ite (lnull$ xs$) bot$ (llast$ xs$))))) :rule eq_transitive)
(step t18 (cl) :rule resolution :premises (t17 t10 t16 t15 a3))
