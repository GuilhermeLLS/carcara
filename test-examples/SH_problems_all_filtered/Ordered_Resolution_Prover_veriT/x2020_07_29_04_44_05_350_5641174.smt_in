; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_literal_multiset$ 0)
(declare-sort A_literal_multiset_set$ 0)
(declare-sort A_literal_multiset_list$ 0)
(declare-fun s$ (A_literal_multiset$) A_literal_multiset$)
(declare-fun cAs$ () A_literal_multiset_list$)
(declare-fun set$ (A_literal_multiset_list$) A_literal_multiset_set$)
(declare-fun zero$ () A_literal_multiset$)
(declare-fun member$ (A_literal_multiset$ A_literal_multiset_set$) Bool)
(assert (! (not (forall ((?v0 A_literal_multiset$)) (=> (member$ ?v0 (set$ cAs$)) (= (s$ ?v0) zero$)))) :named a0))
(assert (! (forall ((?v0 A_literal_multiset$)) (=> (member$ ?v0 (set$ cAs$)) (= (s$ ?v0) zero$))) :named a1))
(check-sat)
;;;;(get-proof)
