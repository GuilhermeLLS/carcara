; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A$ 0)
(declare-sort A_literal$ 0)
(declare-sort A_literal_set$ 0)
(declare-sort A_s_a_fun_fun$ 0)
(declare-sort A_literal_multiset$ 0)
(declare-fun e$ () A_literal_multiset$)
(declare-fun atm_of$ (A_literal$) A$)
(declare-fun member$ (A_literal$ A_literal_set$) Bool)
(declare-fun set_mset$ (A_literal_multiset$) A_literal_set$)
(declare-fun subst_atm$ () A_s_a_fun_fun$)
(declare-fun is_ground_atm$ (A_s_a_fun_fun$ A$) Bool)
(assert (! (not (forall ((?v0 A_literal$)) (=> (member$ ?v0 (set_mset$ e$)) (is_ground_atm$ subst_atm$ (atm_of$ ?v0))))) :named a0))
(assert (! (forall ((?v0 A_literal$)) (=> (member$ ?v0 (set_mset$ e$)) (is_ground_atm$ subst_atm$ (atm_of$ ?v0)))) :named a1))
(check-sat)
;;;;(get-proof)
