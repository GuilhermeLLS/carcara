; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_inference$ 0)
(declare-sort A_literal_multiset$ 0)
(declare-sort A_literal_multiset_multiset$ 0)
(declare-fun gamma$ () A_inference$)
(declare-fun infer$ (A_literal_multiset_multiset$ A_literal_multiset$ A_literal_multiset$) A_inference$)
(declare-fun thesis$ () Bool)
(declare-fun concl_of$ (A_inference$) A_literal_multiset$)
(declare-fun main_prem_of$ (A_inference$) A_literal_multiset$)
(declare-fun side_prems_of$ (A_inference$) A_literal_multiset_multiset$)
(assert (! (not thesis$) :named a0))
(assert (! (forall ((?v0 A_literal_multiset_multiset$) (?v1 A_literal_multiset$) (?v2 A_literal_multiset$)) (=> (= gamma$ (infer$ ?v0 ?v1 ?v2)) thesis$)) :named a1))
(assert (! (forall ((?v0 A_inference$)) (= (infer$ (side_prems_of$ ?v0) (main_prem_of$ ?v0) (concl_of$ ?v0)) ?v0)) :named a2))
(check-sat)
;;;;(get-proof)
