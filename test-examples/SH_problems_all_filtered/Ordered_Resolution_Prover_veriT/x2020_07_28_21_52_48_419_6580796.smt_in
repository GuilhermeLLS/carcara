; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=30
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort A_set$ 0)
(declare-sort A_literal_multiset$ 0)
(declare-sort A_literal_multiset_set$ 0)
(declare-fun e$ () A_literal_multiset$)
(declare-fun m$ () A_literal_multiset_set$)
(declare-fun i_of$ (A_literal_multiset_set$) A_set$)
(declare-fun true_cls$ (A_set$ A_literal_multiset$) Bool)
(assert (! (not false) :named a0))
(assert (! (true_cls$ (i_of$ m$) e$) :named a1))
(assert (! (not (true_cls$ (i_of$ m$) e$)) :named a2))
(check-sat)
;;;;(get-proof)
