(assume a1 (not (chain$ (derive$ ground_sound_Gamma$ rf$) gs$)))
(assume a2 (=> (chain$a (rp$ s$ subst_atm$ renamings_apart$ mgu$ less_atm$) sts$) (chain$ (derive$ ground_sound_Gamma$ rf$) (lmap$ uu$ sts$))))
(assume a3 (chain$a (rp$ s$ subst_atm$ renamings_apart$ mgu$ less_atm$) sts$))
(assume a4 (= gs$ (lmap$ uu$ sts$)))
(step t5 (cl (not (chain$a (rp$ s$ subst_atm$ renamings_apart$ mgu$ less_atm$) sts$)) (chain$ (derive$ ground_sound_Gamma$ rf$) (lmap$ uu$ sts$))) :rule implies :premises (a2))
(step t6 (cl (chain$ (derive$ ground_sound_Gamma$ rf$) (lmap$ uu$ sts$))) :rule resolution :premises (t5 a3))
(step t7 (cl (not (= (derive$ ground_sound_Gamma$ rf$) (derive$ ground_sound_Gamma$ rf$))) (not (= gs$ (lmap$ uu$ sts$))) (not (chain$ (derive$ ground_sound_Gamma$ rf$) (lmap$ uu$ sts$))) (chain$ (derive$ ground_sound_Gamma$ rf$) gs$)) :rule eq_congruent_pred)
(step t8 (cl (= (derive$ ground_sound_Gamma$ rf$) (derive$ ground_sound_Gamma$ rf$))) :rule eq_reflexive)
(step t9 (cl (not (= gs$ (lmap$ uu$ sts$))) (not (chain$ (derive$ ground_sound_Gamma$ rf$) (lmap$ uu$ sts$))) (chain$ (derive$ ground_sound_Gamma$ rf$) gs$)) :rule th_resolution :premises (t7 t8))
(step t10 (cl) :rule resolution :premises (t9 a1 t6 a4))
