; --proof-with-sharing --index-fresh-sorts --proof-define-skolems --proof-prune --proof-merge --disable-print-success --disable-banner --max-time=20
(set-option :produce-proofs true)
(set-logic AUFLIA)
(declare-sort Enat$ 0)
(declare-fun min$ (Enat$ Enat$) Enat$)
(declare-fun less$ (Enat$ Enat$) Bool)
(declare-fun less_eq$ (Enat$ Enat$) Bool)
(assert (! (forall ((?v0 Enat$) (?v1 Enat$)) (= (min$ ?v0 ?v1) (ite (less_eq$ ?v0 ?v1) ?v0 ?v1))) :named a0))
(assert (! (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (less$ ?v0 (min$ ?v1 ?v2)) (and (less$ ?v0 ?v1) (less$ ?v0 ?v2)))) :named a1))
(assert (! (not (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (less$ ?v0 (min$ ?v1 ?v2)) (and (less$ ?v0 ?v1) (less$ ?v0 ?v2))))) :named a2))
(check-sat)
;;;;(get-proof)
